{"version":3,"sources":["./src/app/pages/mortuary/admission/admission.component.html","./src/app/pages/mortuary/admission/image-uploader/image-uploader.component.html","./src/app/pages/mortuary/editor/editor.component.html","./src/app/pages/mortuary/fridgetracking/fridgetracking.component.html","./src/app/pages/mortuary/invoices/invoice.component.html","./src/app/pages/mortuary/invoices/multiple-image-uploader/multiple-image-uploader.component.html","./src/app/pages/customer/customer.service.ts","./src/app/pages/inventory/purchase/bookinginvoice.model.ts","./src/app/pages/mortuary/admission/admission.component.scss","./src/app/pages/mortuary/admission/admission.component.ts","./src/app/pages/mortuary/admission/admission.service.ts","./src/app/pages/mortuary/admission/image-uploader/image-uploader.component.scss","./src/app/pages/mortuary/admission/image-uploader/image-uploader.component.ts","./src/app/pages/mortuary/editor/editor.component.ts","./src/app/pages/mortuary/fridgetracking/fridge.service.ts","./src/app/pages/mortuary/fridgetracking/fridgetracking.component.ts","./src/app/pages/mortuary/invoices/invoice.component.scss","./src/app/pages/mortuary/invoices/invoice.component.ts","./src/app/pages/mortuary/invoices/multiple-image-uploader/multiple-image-uploader.component.scss","./src/app/pages/mortuary/invoices/multiple-image-uploader/multiple-image-uploader.component.ts","./src/app/pages/mortuary/mortuary.module.ts"],"names":[],"mappings":"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","file":"pages-mortuary-mortuary-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row mb-1\\\" *ngIf=\\\"showList\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search client by ID Number...\\\"\\n                   class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"toggleShow()\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"type=='list' || showList\\\" class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>Client Name</th>\\n                    <th>Id/Passport Number</th>\\n                    <th>Date</th>\\n                    <th>Action</th>\\n\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let admission of admissions  | ClientSearchPipe : searchText | paginate: { itemsPerPage: 6, currentPage: p }\\\">\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.clientName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.clientDocumentNumber}}</td>\\n\\n                    <!--<td class=\\\"align-middle text-truncate\\\">{{client.county.countyName}}</td>-->\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.createdOn | date:\\\"dd MMMM, yyyy\\\"}}</td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"editInvoice(admission)\\\"><i\\n                                    class=\\\"fa fa-pencil\\\"></i></button>\\n                        </div>\\n                    </td>\\n                    <!--<td class=\\\"align-middle\\\">-->\\n                        <!--<div class=\\\"btn-group\\\" role=\\\"group\\\">-->\\n                            <!--<button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"generateInvoice(admission)\\\" ><i-->\\n                                    <!--class=\\\"fa fa-book\\\"></i><span>Generate Invoice</span></button>-->\\n                        <!--</div>-->\\n                    <!--</td>-->\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"showList\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"showDetails\\\">\\n    <div class=\\\"col\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Mortuary Admission</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                    <a data-widgster=\\\"fullscreen\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-expand\\\"></i></a>\\n                    <a data-widgster=\\\"restore\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-compress\\\"></i></a>\\n                    <!--<a data-widgster=\\\"close\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-times\\\"></i></a>-->\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"!confirmed\\\" class=\\\"card-body widget-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div *ngFor=\\\"let step of steps; let last = last\\\" class=\\\"col-md-3 col-sm-6 col-12 step text-center\\\">\\n                        <div class=\\\"d-flex justify-content-center align-items-center text-white pl-2 pr-2 mb-2 rounded step-content\\\"\\n                             [class.bg-success]=\\\"step.valid\\\" [class.bg-danger]=\\\"step.active\\\"\\n                             [class.confirmed]=\\\"confirmed\\\">\\n                            <i class=\\\"fa {{ step.icon }} mr-2\\\" aria-hidden=\\\"true\\\"></i>\\n                            <span class=\\\"step-name\\\">{{step.name}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div *ngFor=\\\"let step of steps\\\" [hidden]=\\\"!step.active\\\" class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <h4 class=\\\"mt-3 mb-3\\\"><i class=\\\"fa {{ step.icon }}\\\"></i> {{step.name}}</h4>\\n                    </div>\\n\\n                    <form *ngIf=\\\"step.name=='Client Details'\\\" [formGroup]=\\\"clientForm\\\" class=\\\"row bg-light pt-2\\\">\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && clientForm.get('clientId').hasError('required'), 'has-success' : !clientForm.get('clientId').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Select Clients</label>\\n                            <select formControlName=\\\"clientId\\\" class=\\\"form-control\\\"\\n                                    [ngClass]=\\\"{'form-control-danger' :  clientForm.get('clientId').hasError('required'), 'form-control-success' :  !clientForm.get('clientId').hasError('required') }\\\">\\n                                <option *ngFor=\\\"let client of clients\\\" [selected]=\\\"client.id==clientId\\\" [value]=\\\"client.id\\\">{{client.fullName}}</option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && clientForm.get('clientId').hasError('required')\\\">Client is\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" style=\\\"margin-top: 15px;\\\">\\n                            <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"showClientMaster()\\\">Add Client &nbsp;<i\\n                                    class=\\\"fa fa-plus \\\"></i></button>\\n                        </div>\\n\\n                    </form>\\n\\n                    <form *ngIf=\\\"step.name=='Deceased Details'\\\" [formGroup]=\\\"personalForm\\\" class=\\\"row bg-light pt-2\\\">\\n\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('fullName').hasError('required'), 'has-success' : !personalForm.get('fullName').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Full Name</label>\\n                            <input formControlName=\\\"fullName\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  personalForm.get('fullName').hasError('required'), 'form-control-success' :  !personalForm.get('fullName').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('fullName').hasError('required')\\\">Full\\n                                Name is required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('documentNumber').hasError('required'), 'has-success' : !personalForm.get('documentNumber').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">ID/Passport Number</label>\\n                            <input formControlName=\\\"documentNumber\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  personalForm.get('documentNumber').hasError('required'), 'form-control-success' :  !personalForm.get('documentNumber').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('documentNumber').hasError('required')\\\">\\n                                Document Number required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"   [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('gender').hasError('required'), 'has-success' : !personalForm.get('gender').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Gender</label>\\n                            <select formControlName=\\\"gender\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{'form-control-danger' :  personalForm.get('gender').hasError('required'), 'form-control-success' :  !personalForm.get('gender').hasError('required') }\\\">\\n                                <option>Male</option>\\n                                <option>Female</option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('gender').hasError('required')\\\">\\n                                Gender required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('dateOfBirth').hasError('required'), 'has-success' : !personalForm.get('dateOfBirth').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Date Of Birth</label>\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\n                                       formControlName=\\\"dateOfBirth\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"p.toggle()\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                                </div>\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('dateOfBirth').hasError('required')\\\">\\n                                Date of birth required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">County</label>\\n                            <select formControlName=\\\"county\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let county of counties\\\" [value]=\\\"county.countyID\\\">\\n                                    {{county.countyName}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('county').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && personalForm.get('country').hasError('required'),\\n                        'has-success' : !personalForm.get('country').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Country</label>\\n                            <select formControlName=\\\"country\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.countryID\\\">\\n                                    {{country.countryCode}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('country').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('causeOfDeath').hasError('required'), 'has-success' : !personalForm.get('causeOfDeath').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Cause of Death</label>\\n                            <textarea formControlName=\\\"causeOfDeath\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{'form-control-danger' :  personalForm.get('causeOfDeath').hasError('required'), 'form-control-success' :  !personalForm.get('causeOfDeath').hasError('required') }\\\"\\n                                      type=\\\"text\\\">\\n                            </textarea>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('causeOfDeath').hasError('required')\\\">Cause of Death\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('dateOfDeath').hasError('required'), 'has-success' : !personalForm.get('dateOfDeath').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Date Of Death</label>\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\n                                       formControlName=\\\"dateOfDeath\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"p.toggle()\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                                </div>\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('dateOfDeath').hasError('required')\\\">\\n                                Date of birth required\\n                            </small>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-md-6\\\"  >\\n                            <label class=\\\"form-control-label\\\">Description</label>\\n                            <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\" type=\\\"text\\\" ></textarea>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && personalForm.get('service').hasError('required'),\\n                        'has-success' : !personalForm.get('service').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Service</label>\\n                            <select formControlName=\\\"service\\\" class=\\\"form-control\\\" (change)=\\\"getFridgesByServiceId($event.target.value)\\\">\\n                                <option *ngFor=\\\"let service of services\\\" [value]=\\\"service.id\\\" >\\n                                    {{service.serviceName}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('service').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && personalForm.get('fridge').hasError('required'),\\n                        'has-success' : !personalForm.get('fridge').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Fridge</label>\\n                            <select formControlName=\\\"fridge\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let fridge of fridges\\\" [value]=\\\"fridge.id\\\">\\n                                    {{fridge.name}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('fridge').hasError('required')\\\">Fridge is required\\n                            </small>\\n                        </div>\\n                    </form>\\n\\n                    <form *ngIf=\\\"step.name=='Next of Kin'\\\" [formGroup]=\\\"nextOfKinForm\\\" class=\\\"row bg-light pt-2\\\">\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && nextOfKinForm.get('fullName').hasError('required'), 'has-success' : !nextOfKinForm.get('fullName').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Full Name</label>\\n                            <input formControlName=\\\"fullName\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  nextOfKinForm.get('fullName').hasError('required'), 'form-control-success' :  !nextOfKinForm.get('fullName').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && nextOfKinForm.get('fullName').hasError('required')\\\">First\\n                                Name is required\\n                            </small>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && nextOfKinForm.get('documentNumber').hasError('required'), 'has-success' : !nextOfKinForm.get('documentNumber').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">ID/Passport Number</label>\\n                            <input formControlName=\\\"documentNumber\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  nextOfKinForm.get('documentNumber').hasError('required'), 'form-control-success' :  !nextOfKinForm.get('documentNumber').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && nextOfKinForm.get('documentNumber').hasError('required')\\\">\\n                                Document Number required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">Gender</label>\\n                            <select formControlName=\\\"gender\\\" class=\\\"form-control\\\">\\n                                <option>Male</option>\\n                                <option>Female</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">Mobile Number</label>\\n                            <input formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\"\\n                                   type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">County</label>\\n                            <select formControlName=\\\"county\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let county of counties\\\" [value]=\\\"county.countyID\\\">\\n                                    {{county.countyName}}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && nextOfKinForm.get('country').hasError('required'),\\n                        'has-success' : !nextOfKinForm.get('country').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Country</label>\\n                            <select formControlName=\\\"country\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.countryID\\\">\\n                                    {{country.countryCode}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && nextOfKinForm.get('country').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n\\n\\n                    </form>\\n\\n                </div>\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        <button class=\\\"btn btn-primary pull-left\\\" (click)=\\\"prev()\\\"><i\\n                                class=\\\"fa fa-chevron-left arrow\\\"></i>&nbsp; Prev Step\\n                        </button>\\n                        <button *ngIf=\\\"!steps[steps.length-1].active\\\" class=\\\"btn btn-primary pull-right\\\"\\n                                (click)=\\\"next()\\\">Next Step &nbsp;<i class=\\\"fa fa-chevron-right arrow\\\"></i></button>\\n                        <button *ngIf=\\\"steps[steps.length-1].active\\\" class=\\\"btn btn-primary pull-right\\\"\\n                                (click)=\\\"confirm()\\\">Confirm &nbsp;<i class=\\\"fa fa-check arrow\\\"></i></button>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\" *ngIf=\\\"showInvoice\\\" [formGroup]=\\\"invoiceFrom\\\" >\\n    <div class=\\\"col-lg-12 mb-4\\\" id=\\\"section-to-print\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Invoice Details</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                </div>\\n            </div>\\n          <!--  <div class=\\\"card-body pt-0 widget-body\\\">\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"invoiceNo\\\">Invoice No</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"invoiceNo\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"invoiceDate\\\">Invoice Date</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"invoiceDate\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"clientName\\\">Client Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"clientName\\\" placeholder=\\\"\\\" disabled >\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"documentNumber\\\">Id/Passport Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"documentNumber\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"admissionNumber\\\">Admission Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"admissionNumber\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12 mb-4\\\">\\n                    <div widget class=\\\"card border-0 box-shadow\\\">\\n                        <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                            <h5 class=\\\"mb-0\\\">Services</h5>\\n                            <div class=\\\"widget-controls\\\">\\n                                <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                                <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"card-body pt-0 widget-body\\\">\\n                            <table class=\\\"table table-bordered\\\">\\n                                <thead>\\n                                <tr>\\n                                    <th>S.No</th>\\n                                    <th>Service Nme</th>\\n                                    <th>Price (ksh)</th>\\n                                    <th>Fridge</th>\\n                                    <th>Fridge Price (ksh)</th>\\n                                    <th>Total (ksh)</th>\\n                                </tr>\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let invoice of invoiceServices\\\">\\n                                    <th scope=\\\"row\\\">1</th>\\n                                    <td>{{invoice.serviceName}}</td>\\n                                    <td>{{invoice.price}}</td>\\n                                    <td>{{invoice.fridgeName}}</td>\\n                                    <td>{{invoice.fridgePrice}}</td>\\n                                    <td>  {{invoice.invoiceTotal}}</td>\\n                                </tr>\\n\\n\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>-->\\n            <div class=\\\"card\\\" >\\n                <div class=\\\"card-body p-50\\\">\\n                    <div class=\\\"invoice\\\">\\n                        <div class=\\\"d-md-flex justify-content-between align-items-center\\\">\\n                            <h2 class=\\\"font-weight-800 d-flex align-items-center\\\">\\n                                <img class=\\\"m-r-20\\\" src=\\\"assets/media/image/logo-sm.png\\\" alt=\\\"image\\\">\\n                            </h2>\\n                            <h3 class=\\\"text-xs-left m-b-0\\\">Invoice</h3>\\n                        </div>\\n                        <hr class=\\\"m-t-b-50\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <p >\\n                                    <b>Invoice to</b>\\n                                </p>\\n                                <p >\\n                                    <b>Client Name</b>\\n                                </p>\\n                                <p>Address<br>Mobile Number<br>Email</p>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                               <!-- <p class=\\\"text-right\\\">\\n                                    <b>Invoice to</b>\\n                                </p>-->\\n                                <!--<p class=\\\"text-right\\\">Gaala &amp; Sons,<br> C-201, Beykoz-34800,<br> Canada, K1A 0G9.</p>-->\\n                            </div>\\n                        </div>\\n                        <div class=\\\"table-responsive\\\" tabindex=\\\"1\\\" style=\\\"overflow: hidden; outline: none; touch-action: none;\\\">\\n                            <table class=\\\"table m-t-b-50\\\">\\n                                <thead>\\n                                <tr class=\\\"bg-dark text-white\\\">\\n                                    <th>S.No</th>\\n                                    <th>Service Nme</th>\\n                                    <th>Price (ksh)</th>\\n                                    <th>Fridge</th>\\n                                    <th>Fridge Price (ksh)</th>\\n                                    <th>Total (ksh)</th>\\n                                </tr>\\n\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let invoice of invoiceServices\\\">\\n                                    <th scope=\\\"row\\\">1</th>\\n                                    <td>{{invoice.serviceName}}</td>\\n                                    <td>{{invoice.price}}</td>\\n                                    <td>{{invoice.fridgeName}}</td>\\n                                    <td>{{invoice.fridgePrice}}</td>\\n                                    <td>  {{invoice.invoiceTotal}}</td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        <div class=\\\"text-right\\\">\\n                            <h4 class=\\\"font-weight-800\\\">Total : </h4>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"text-right d-print-none\\\">\\n                        <hr class=\\\"m-t-b-50\\\">\\n\\n                        <a href=\\\"javascript:window.print()\\\" class=\\\"btn btn-success m-l-5\\\">\\n                            <i class=\\\"fa fa-print m-r-5\\\"></i> Print\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancelInvoice()\\\">Cancel Invoice</button>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\"","export default \"<input type=\\\"file\\\" (change)=\\\"fileChange(input)\\\" #input class=\\\"img-upload-btn\\\"/>\\n\\n<button class=\\\"btn btn-info btn-block rounded-0\\\" type=\\\"button\\\">\\n     <span *ngIf=\\\"!image\\\"><i class=\\\"fa fa-upload\\\"></i> Select Image... </span>\\n     <span *ngIf=\\\"image\\\"><i class=\\\"fa fa-refresh\\\"></i> Change Image... </span>\\n</button>\\n\\n<div class=\\\"image-wrapper\\\">\\n    <i *ngIf=\\\"image\\\" class=\\\"fa fa-times delete-img\\\" (click)=\\\"removeImage()\\\"></i>\\n    <img [attr.src]=\\\"image\\\" *ngIf=\\\"image\\\" width=\\\"100%\\\">\\n    <img src=\\\"assets/img/app/no-image.png\\\" *ngIf=\\\"!image\\\" width=\\\"100%\\\">\\n</div>\\n\\n\"","export default \" <ckeditor\\n    [(ngModel)]=\\\"ckeditorContent\\\"\\n    [config]=\\\"config\\\"\\n    (change)=\\\"onChange($event)\\\"\\n    (ready)=\\\"onReady($event)\\\"\\n    (focus)=\\\"onFocus($event)\\\"\\n    (blur)=\\\"onBlur($event)\\\"\\n    debounce=\\\"500\\\">\\n  </ckeditor>\"","export default \"<div class=\\\"row mb-1\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search fridge by Name...\\\" class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"openModal(modalContent, null)\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>CODE</th>\\n                    <th>NAME</th>\\n                    <th>SERVICE</th>\\n                    <th>STATUS</th>\\n                    <th>Action</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let fridge of fridges | paginate: { itemsPerPage: 6, currentPage: p }\\\">\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.code}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.name}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.service.serviceName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">\\n                        <span *ngIf=\\\"fridge.status != 1\\\" class=\\\"badge badge-success mr-1\\\">Available</span>\\n                        <span *ngIf=\\\"fridge.status === 1\\\" class=\\\"badge badge-danger mr-1\\\">Occupied</span>\\n                    </td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, client)\\\"><i class=\\\"fa fa-eye\\\"></i></button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\"></h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmClient\\\" (ngSubmit)=\\\"onSubmit(frmClient.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Full Name</label>\\n                                        <input formControlName=\\\"fullName\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Display Name</label>\\n                                        <input formControlName=\\\"displayName\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">ID/PP No</label>\\n                                        <input formControlName=\\\"documentNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <label class=\\\"form-control-label\\\">Gender</label>\\n                                    <select formControlName=\\\"gender\\\" class=\\\"form-control\\\">\\n                                        <option>Male</option>\\n                                        <option>Female</option>\\n                                    </select>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Country</label>\\n                                        <select formControlName=\\\"country\\\" class=\\\"form-control\\\">\\n                                            <option *ngFor=\\\"let country of countries\\\" [selected]=\\\"client.country && client.country.countryID==country.countryID\\\" [value]=\\\"country.countryID\\\">{{country.countryCode}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">County</label>\\n                                        <select formControlName=\\\"county\\\" class=\\\"form-control\\\">\\n                                            <option *ngFor=\\\"let county of counties\\\" [selected]=\\\"client.county && client.county.countyID==county.countyID\\\" [value]=\\\"county.countyID\\\">{{county.countyName}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Email</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope-o\\\"></i></span>\\n                                            </div>\\n                                            <input formControlName=\\\"email\\\" class=\\\"form-control\\\" type=\\\"email\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Mobile Number</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone\\\"></i></span>\\n                                            </div>\\n                                            <input formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Address</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker\\\"></i></span>\\n                                            </div>\\n                                            <input formControlName=\\\"address\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmClient.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span *ngIf=\\\"!client.id\\\">Add</span><span *ngIf=\\\"client.id\\\">Update</span></button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","export default \"\\n<div class=\\\"row\\\" [hidden]=\\\"showList\\\">\\n    <div class=\\\"col-lg-12 mb-4\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Invoice Details</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body pt-0 widget-body\\\">\\n                <form [formGroup]=\\\"frmInvoice\\\" (ngSubmit)=\\\"onSubmitInvoice(frmInvoice.value)\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : frmInvoice.get('clientId').hasError('required'), 'has-success' : !frmInvoice.get('clientId').hasError('required') }\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-control-label\\\">Select Clients</label>\\n                                <select formControlName=\\\"clientId\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{'form-control-danger' :  frmInvoice.get('clientId').hasError('required'), 'form-control-success' :  !frmInvoice.get('clientId').hasError('required') }\\\">\\n                                    <option *ngFor=\\\"let client of clients\\\" [selected]=\\\"client.id==clientId\\\"\\n                                            [value]=\\\"client.id\\\">{{client.fullName}}\\n                                    </option>\\n                                </select>\\n                                <small class=\\\"text-danger\\\"\\n                                       *ngIf=\\\"frmInvoice.get('clientId').hasError('required')\\\">Client is\\n                                    required\\n                                </small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-lg-12 mb-4\\\">\\n                        <div widget class=\\\"card border-0 box-shadow\\\">\\n                            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                                <h5 class=\\\"mb-0\\\">Service Details</h5>\\n                                <div class=\\\"widget-controls\\\">\\n                                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i\\n                                            class=\\\"fa fa-chevron-down\\\"></i></a>\\n                                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i\\n                                            class=\\\"fa fa-chevron-up\\\"></i></a>\\n                                </div>\\n\\n\\n                            </div>\\n                            <div class=\\\"card-body pt-0 widget-body\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"openAddServiceModal(modalServiceContent)\\\">Add Items\\n                                    &nbsp;<i class=\\\"fa fa-plus \\\"></i>\\n                                </button>\\n                                <table class=\\\"table table-bordered\\\" style=\\\"margin-top: 40px;\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>#</th>\\n                                        <th>Service Name</th>\\n                                        <th>Unit</th>\\n                                        <th>Quantity</th>\\n                                        <th>Price (Ksh)</th>\\n                                        <th>Total Amount</th>\\n\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let invoiceService of invoiceServices\\\">\\n                                        <td>{{invoiceService.service}}</td>\\n                                        <td>{{invoiceService.serviceName}}</td>\\n                                        <td>{{invoiceService.unit}}</td>\\n                                        <td>{{invoiceService.quantity}}</td>\\n                                        <td>{{invoiceService.price}}</td>\\n                                        <td>{{invoiceService.totalAmount}}</td>\\n\\n                                    </tr>\\n                                    <tr>\\n                                        <td colspan=\\\"5\\\" style=\\\"font-size: medium; font-weight: bold;text-align: right\\\">Total</td>\\n                                        <td colspan=\\\"6\\\" >{{getSum()}}</td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row justify-content-center\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\">Submit</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n<div class=\\\"row\\\" [hidden]=\\\"showInvoice\\\" [formGroup]=\\\"frmInvoice\\\" >\\n    <div class=\\\"col-lg-12 mb-4\\\" id=\\\"section-to-print\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Invoice Details</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                </div>\\n            </div>\\n            <div class=\\\"card\\\" >\\n                <div class=\\\"card-body p-50\\\">\\n                    <div class=\\\"invoice\\\">\\n                        <div class=\\\"d-md-flex justify-content-between align-items-center\\\">\\n                            <h2 class=\\\"font-weight-800 d-flex align-items-center\\\">\\n\\n                            </h2>\\n                            <h3 class=\\\"text-xs-left m-b-0\\\">Invoice</h3>\\n                        </div>\\n                        <hr class=\\\"m-t-b-50\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <p >\\n                                    <b>Invoice to</b>\\n                                </p>\\n                                <p >\\n                                    <b>Client Name</b>\\n                                </p>\\n                                <p>Address<br>Mobile Number<br>Email</p>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <!-- <p class=\\\"text-right\\\">\\n                                     <b>Invoice to</b>\\n                                 </p>-->\\n                                <!--<p class=\\\"text-right\\\">Gaala &amp; Sons,<br> C-201, Beykoz-34800,<br> Canada, K1A 0G9.</p>-->\\n                            </div>\\n                        </div>\\n                        <div class=\\\"table-responsive\\\" tabindex=\\\"1\\\" style=\\\"overflow: hidden; outline: none; touch-action: none;\\\">\\n                            <table class=\\\"table m-t-b-50\\\">\\n                                <thead>\\n                                <tr class=\\\"bg-dark text-white\\\">\\n                                    <th>S.No</th>\\n                                    <th>Service Nme</th>\\n                                    <th>Unit</th>\\n                                    <th>Quantity</th>\\n                                    <th>Price</th>\\n                                    <th>Total Amount (ksh)</th>\\n                                </tr>\\n\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let invoice of invoiceServices\\\">\\n                                    <th scope=\\\"row\\\">1</th>\\n                                    <td>{{invoice.serviceName}}</td>\\n                                    <td>{{invoice.unitName}}</td>\\n                                    <td>{{invoice.quantity}}</td>\\n                                    <td>{{invoice.price}}</td>\\n                                    <td>  {{invoice.totalAmount}}</td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        <div class=\\\"text-right\\\">\\n                            <h4 class=\\\"font-weight-800\\\">Total :  </h4>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"text-right d-print-none\\\">\\n                        <hr class=\\\"m-t-b-50\\\">\\n\\n                        <a href=\\\"javascript:window.print()\\\" class=\\\"btn btn-success m-l-5\\\">\\n                            <i class=\\\"fa fa-print m-r-5\\\"></i> Print\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancelInvoice()\\\">Cancel Invoice</button>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalServiceContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\"></h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmService\\\" (ngSubmit)=\\\"onSubmit(frmService.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{'has-danger' : frmService.get('service').hasError('required'),'has-success' : !frmService.get('service').hasError('required') }\\\">\\n                                        <label class=\\\"form-control-label\\\">Service</label>\\n                                        <select formControlName=\\\"service\\\" class=\\\"form-control\\\" [ngModel]=\\\"service\\\" (ngModelChange)=\\\"getPriceDetails($event)\\\">\\n                                            <option *ngFor=\\\"let service of services\\\" [ngValue]=\\\"service\\\">\\n                                                {{service.serviceName}}\\n                                            </option>\\n                                        </select>\\n                                        <small class=\\\"text-danger\\\"\\n                                               *ngIf=\\\"frmService.get('service').hasError('required')\\\">Service is\\n                                            required\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Quantity</label>\\n                                        <input formControlName=\\\"quantity\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"1\\\" required>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Price</label>\\n                                        <input formControlName=\\\"price\\\" class=\\\"form-control\\\" type=\\\"text\\\" readonly value= \\\"{{service.price}}\\\" />\\n                                    </div>\\n                                </div>\\n\\n\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmService.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span>Add</span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                    </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </div>\\n</ng-template>\\n\"","export default \"<div class=\\\"col-8 offset-2\\\">\\n    <input type=\\\"file\\\" multiple (change)=\\\"fileChange(input)\\\" #input class=\\\"m-img-upload-btn\\\"/>\\n    <button class=\\\"btn btn-success btn-block\\\" type=\\\"button\\\">\\n        <i class=\\\"fa fa-upload\\\"></i> Choose images...\\n    </button>\\n</div>\\n\\n<div class=\\\"card images-container\\\">\\n    <div *ngFor=\\\"let image of images; let i=index;\\\" class=\\\"m-image-wrapper\\\">\\n        <i class=\\\"fa fa-times m-delete-img\\\" (click)=\\\"removeImage(i)\\\"></i>\\n        <img [attr.src]=\\\"image\\\"> \\n    </div> \\n</div>\\n\"","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Client, User} from './customer.model';\nimport {Country} from '../shared/models/country.model';\nimport {County} from '../shared/models/county.model';\nimport {environment} from '../../../environments/environment';\nimport {Branch} from '../shared/models/branch.model';\n\n@Injectable()\nexport class CustomerService {\n    constructor(public http: HttpClient) { }\n\n    getClients(): Observable<Client[]> {\n        return this.http.get<Client[]>(environment.BASE_URL + 'client/clients');\n    }\n\n    addClient(client: Client) {\n        return this.http.post(environment.BASE_URL + 'client/registration', client);\n    }\n\n    updateClient(client: Client) {\n        return this.http.post(environment.BASE_URL  + 'client/registration', client);\n    }\n\n    deleteClient(id: number) {\n        return this.http.delete(environment.BASE_URL + '/' + id);\n    }\n    getCountries(): Observable<Country[]> {\n        return this.http.get<Country[]>(environment.BASE_URL + 'common/countries');\n    }\n\n    getCounties(): Observable<County[]> {\n        return this.http.get<County[]>(environment.BASE_URL + 'common/counties');\n    }\n\n    getBranches(): Observable<Branch[]> {\n        return this.http.get<Branch[]>(environment.BASE_URL + 'common/branches/list');\n    }\n}\n","import {Product} from '../product/product.model';\nimport {Service} from '../../services/service.model';\n\nexport class Bookinginvoice {\n    invoiceNo: string;\n    clientId: number;\n    orderDate: string;\n    products: Product[];\n    services: Service[];\n}","export default \".step .step-content {\\n  background: #b9b9b9;\\n  height: 40px;\\n  font-size: 1.5rem;\\n}\\n.step .step-content .step-name {\\n  font-size: 14px;\\n}\\n.step .step-content.confirmed {\\n  background-color: #4BAE4F !important;\\n}\\n.confirmed-content .fa-check {\\n  font-size: 120px;\\n}\\n.confirmed-content .fa-print {\\n  font-size: 24px;\\n}\\n@media print {\\n  body * {\\n    visibility: hidden;\\n  }\\n\\n  #section-to-print, #section-to-print * {\\n    visibility: visible;\\n  }\\n\\n  #section-to-print {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvYWRtaXNzaW9uL0E6XFxpJm1fY29kZV90ZXN0XFxjb2RlX3Rlc3Qvc3JjXFxhcHBcXHBhZ2VzXFxtb3J0dWFyeVxcYWRtaXNzaW9uXFxhZG1pc3Npb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2FkbWlzc2lvbi9hZG1pc3Npb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQ0FSO0FEQ1E7RUFDSSxlQUFBO0FDQ1o7QURDUTtFQUNJLG9DQUFBO0FDQ1o7QURLSTtFQUNJLGdCQUFBO0FDRlI7QURJSTtFQUNJLGVBQUE7QUNGUjtBREtBO0VBQ0k7SUFDSSxrQkFBQTtFQ0ZOOztFREtFO0lBQ0ksbUJBQUE7RUNGTjs7RURLRTtJQUNJLGtCQUFBO0lBQ0EsT0FBQTtJQUNBLE1BQUE7RUNGTjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvYWRtaXNzaW9uL2FkbWlzc2lvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdGVwe1xuICAgIC5zdGVwLWNvbnRlbnR7XG4gICAgICAgIGJhY2tncm91bmQ6ICNiOWI5Yjk7XG4gICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICAgIC5zdGVwLW5hbWV7XG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIH1cbiAgICAgICAgJi5jb25maXJtZWR7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEJBRTRGICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jb25maXJtZWQtY29udGVudHtcbiAgICAuZmEtY2hlY2t7XG4gICAgICAgIGZvbnQtc2l6ZTogMTIwcHg7ICAgICAgICBcbiAgICB9XG4gICAgLmZhLXByaW50e1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgfVxufVxuQG1lZGlhIHByaW50IHtcbiAgICBib2R5ICoge1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgIC8vdHJhbnNmb3JtOiBzY2FsZSguNyk7XG4gICAgfVxuICAgICNzZWN0aW9uLXRvLXByaW50LCAjc2VjdGlvbi10by1wcmludCAqIHtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcblxuICAgIH1cbiAgICAjc2VjdGlvbi10by1wcmludCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgdG9wOiAwO1xuICAgIH1cbiAgICAvL3RhYmxlIHtwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7fVxufVxuXG4iLCIuc3RlcCAuc3RlcC1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogI2I5YjliOTtcbiAgaGVpZ2h0OiA0MHB4O1xuICBmb250LXNpemU6IDEuNXJlbTtcbn1cbi5zdGVwIC5zdGVwLWNvbnRlbnQgLnN0ZXAtbmFtZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5zdGVwIC5zdGVwLWNvbnRlbnQuY29uZmlybWVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRCQUU0RiAhaW1wb3J0YW50O1xufVxuXG4uY29uZmlybWVkLWNvbnRlbnQgLmZhLWNoZWNrIHtcbiAgZm9udC1zaXplOiAxMjBweDtcbn1cbi5jb25maXJtZWQtY29udGVudCAuZmEtcHJpbnQge1xuICBmb250LXNpemU6IDI0cHg7XG59XG5cbkBtZWRpYSBwcmludCB7XG4gIGJvZHkgKiB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB9XG5cbiAgI3NlY3Rpb24tdG8tcHJpbnQsICNzZWN0aW9uLXRvLXByaW50ICoge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIH1cblxuICAjc2VjdGlvbi10by1wcmludCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICB9XG59Il19 */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {CustomValidators} from 'ng2-validation';\nimport {NgbDateParserFormatter, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport {CustomerService} from '../../customer/customer.service';\nimport {Client} from '../../customer/customer.model';\nimport {Country} from '../../shared/models/country.model';\nimport {County} from '../../shared/models/county.model';\nimport {Admission} from './admission.model';\nimport {AdmissionService} from './admission.service';\nimport {Router} from '@angular/router';\nimport {Service} from '../../services/service.model';\nimport {Nextofkindetails} from './nextofkindetails.model';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {MileleService} from '../../services/service.service';\nimport {tokenReference} from '@angular/compiler';\n\n\n@Component({\n    selector: 'app-admission',\n    templateUrl: './admission.component.html',\n    styleUrls: ['./admission.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [CustomerService, AdmissionService, MileleService]\n})\nexport class AdmissionComponent implements OnInit {\n    public clients: Client[];\n    nextOfKin: Nextofkindetails [] = [];\n    public admission: Admission;\n    public admissions: Admission[];\n    public services: Service[];\n    public fridges: Fridge[];\n    public counties: County[];\n    public countries: Country[];\n\n\n    public steps: any[];\n    public invoiceServices: any[] = [];\n    public clientForm: FormGroup;\n    public personalForm: FormGroup;\n    public nextOfKinForm: FormGroup;\n    public invoiceFrom: FormGroup;\n    public details: any = {};\n    public confirmed: boolean;\n    showDetails: Boolean = false; // hidden by default\n    showList: Boolean = true;\n    showInvoice: Boolean = false;\n\n    constructor(private formBuilder: FormBuilder, private clientService: CustomerService, private mileleService: MileleService,\n                private admissionService: AdmissionService, private router: Router, private toastrService: ToastrService) {\n    }\n    // Datepicker in a popup\n    public modelPopup: NgbDateStruct = {year: new Date().getFullYear(), month: new Date().getMonth() + 1, day: new Date().getDate() - 3};\n    private dayTypes: ({ id: number; dayType: string })[];\n    ngOnInit() {\n\n        this.dayTypes = [\n            {id: 1, dayType: 'WeekDay'},\n            {id: 2, dayType: 'WeekEnd'}\n        ];\n        this.getAdmissions();\n        this.getClients();\n        this.getCountries();\n        this.getCounties();\n        this.getServices();\n\n        this.steps = [\n            {name: 'Client Details', icon: 'fa-lock', active: true, valid: false, hasError: false},\n            {name: 'Deceased Details', icon: 'fa-user', active: false, valid: false, hasError: false},\n            {name: 'Next of Kin', icon: 'fa-credit-card', active: false, valid: false, hasError: false},\n            {name: 'Confirm Details & Submit', icon: 'fa-check-square-o', active: false, valid: false, hasError: false}\n        ];\n\n        this.clientForm = this.formBuilder.group({\n            clientId: ['', Validators.required]\n        });\n\n        this.personalForm = this.formBuilder.group({\n            'causeOfDeath': ['', Validators.required],\n            'dateOfBirth': ['', Validators.required],\n            'dateOfDeath': ['', Validators.required],\n            'gender': ['', Validators.required],\n            'description': null,\n            'documentNumber': ['', Validators.required],\n            'fullName': ['', Validators.required],\n            'imageId': null,\n            country: ['', Validators.required],\n            county: ['', Validators.required],\n            fridge: ['', Validators.required],\n            service: ['', Validators.required]\n        });\n\n        this.nextOfKinForm = this.formBuilder.group({\n            'address': [''],\n            'admissionId': null,\n            country: 0,\n            county: 0,\n            'documentNumber': ['', Validators.required],\n            'email': [''],\n            'fullName': ['', Validators.required],\n            'gender': [''],\n            'id': null,\n            'imageId': [''],\n            'mobileNumber': ['']\n        });\n\n        this.invoiceFrom = this.formBuilder.group({\n            'invoiceNo': null,\n            'invoiceDate': null,\n            'clientName': null,\n            'documentNumber': null,\n            'serviceName': null,\n            'price': null,\n            'fridgeName': null,\n            'fridgePrice': null,\n            'total': null\n        });\n    }\n\n    toggleShow() {\n\n        this.showList = false;\n        this.showDetails = true;\n\n    }\n\n    showClientMaster(): void {\n        this.router.navigateByUrl('/customer');\n    }\n\n    // Datepicker in a popup\n\n    public getClients(): void {\n        this.clientService.getClients().subscribe(clients =>\n            this.clients = clients\n        );\n    }\n\n    public getCountries(): void {\n        this.clientService.getCountries().subscribe(countries =>\n            this.countries = countries\n        );\n    }\n\n    public getCounties(): void {\n        this.clientService.getCounties().subscribe(counties =>\n            this.counties = counties\n        );\n    }\n\n    public getServices(): void {\n        this.mileleService.getServices().subscribe(services =>\n            this.services = services\n        );\n    }\n\n    public getFridgesByServiceId(id: number): void {\n        this.admissionService.getFridgesByServiceId(id).subscribe(fridges =>\n            this.fridges = fridges\n        );\n    }\n\n    public getAdmissions(): void {\n        this.admissionService.getAdmissions().subscribe(admissions =>\n            this.admissions = admissions\n        );\n    }\n\n    public next() {\n        const clientForm = this.clientForm;\n        const personalForm = this.personalForm;\n        const nextOfKinForm = this.nextOfKinForm;\n\n        if (this.steps[this.steps.length - 1].active) {\n            return false;\n        }\n\n        this.steps.some(function (step, index, steps) {\n            if (index < steps.length - 1) {\n                if (step.active) {\n                    // tslint:disable-next-line:triple-equals\n                    if (step.name === 'Client Details') {\n                        if (clientForm.valid) {\n                            step.active = false;\n                            step.valid = true;\n                            steps[index + 1].active = true;\n                            return true;\n                        } else {\n                            step.hasError = true;\n                        }\n                    }\n                    if (step.name === 'Deceased Details') {\n                        if (personalForm.valid) {\n                            step.active = false;\n                            step.valid = true;\n                            steps[index + 1].active = true;\n                            return true;\n                        } else {\n                            step.hasError = true;\n                        }\n                    }\n                    if (step.name === 'Next of Kin') {\n                        if (nextOfKinForm.valid) {\n                            step.active = false;\n                            step.valid = true;\n                            steps[index + 1].active = true;\n                            return true;\n                        } else {\n                            step.hasError = true;\n                        }\n                    }\n                }\n            }\n        });\n\n\n        console.log(this.details);\n    }\n\n    public prev() {\n        if (this.steps[0].active) {\n            return false;\n        }\n        this.steps.some(function (step, index, steps) {\n            if (index !== 0) {\n                if (step.active) {\n                    step.active = false;\n                    steps[index - 1].active = true;\n                    return true;\n                }\n            }\n        });\n    }\n\n    public addAdmission(admission: Admission) {\n        // console.log(admission);\n        this.admissionService.addAdmission(admission).subscribe(admission => {\n            console.log(admission);\n            this.getAdmissions();\n        });\n    }\n\n    public confirm() {\n        // this.steps.forEach(step => step.valid = true);\n        // this.confirmed = true;\n        // if (this.frmService.valid) {\n        if (this.details.id) {\n            // this.updateAdmission(this.details);\n        } else {\n            this.details.clientId = this.clientForm.value.clientId;\n            this.details.fullName = this.personalForm.value.fullName;\n            this.details.documentNumber = this.personalForm.value.documentNumber;\n            this.details.gender = this.personalForm.value.gender;\n            this.details.description = this.personalForm.value.description;\n            this.details.country = this.personalForm.value.country;\n            this.details.county = this.personalForm.value.county;\n            let dtb = this.personalForm.value.dateOfBirth;\n            let tempdtb = new Date(dtb.year, dtb.month-1, dtb.day);\n            this.details.dateOfBirth = tempdtb.toLocaleString().split(',')[0];\n            //this.details.dateOfBirth = this.personalForm.value.dateOfBirth;\n            this.details.address = 'na';\n            this.details.mobileNumber = '000';\n            this.details.causeOfDeath = this.personalForm.value.causeOfDeath;\n            let dtd=this.personalForm.value.dateOfDeath;\n            let tempdtd = new Date(dtd.year, dtd.month-1, dtd.day);\n            this.details.dateOfBirth = tempdtd.toLocaleString().split(',')[0];\n            //this.details.dateOfDeath = this.personalForm.value.dateOfDeath;\n            this.details.fridgeId = this.personalForm.value.fridge;\n            this.details.serviceId = this.personalForm.value.service;\n            this.nextOfKin.push(this.nextOfKinForm.value);\n            this.details.nextOfKinDetails = this.nextOfKin;\n            this.details.description = this.personalForm.value.description;\n            this.addAdmission(this.details);\n            this.showList = true;\n            this.showDetails = false;\n            this.clientForm.reset();\n            this.personalForm.reset();\n            this.nextOfKinForm.reset();\n            this.invoiceFrom.reset();\n            this.toastrService.success('Saved Successfully!');\n        }\n\n        //  }\n    }\n\n\n    public generateInvoice(admission: Admission) {\n        this.showInvoice = true;\n        this.showList = false;\n        /*  this.invoiceServices.push({'serviceName': admission.serviceName, 'price': 100,\n              'fridgeName': admission.fridgeName, 'fridgePrice': 200,'invoiceTotal': 300});*/\n        this.invoiceServices.push({\n            'serviceName': 'Premium', 'price': 100,\n            'fridgeName': 'VM0001', 'fridgePrice': 200, 'invoiceTotal': 300\n        });\n    }\n\n    public cancelInvoice() {\n        this.showList = true;\n        this.showInvoice = false;\n        this.invoiceServices = [];\n    }\n\n    public editInvoice(admission: Admission) {\n        this.showList = false;\n        this.showDetails = true;\n        /*  this.clientForm.controls.clientId.setValue({\n              clientId: admission.customer\n          });*/\n        this.clientForm.controls['clientId'].setValue(admission.customer);\n        this.personalForm.controls['fullName'].setValue(admission.fullName);\n        this.personalForm.controls['documentNumber'].setValue(admission.documentNumber);\n        this.personalForm.controls['gender'].setValue(admission.gender);\n        this.personalForm.controls['dateOfBirth'].setValue(admission.dateOfBirth);\n        this.personalForm.controls['county'].setValue(admission.county);\n        this.personalForm.controls['country'].setValue(admission.country);\n        this.personalForm.controls['causeOfDeath'].setValue(admission.causeOfDeath);\n        this.personalForm.controls['dateOfDeath'].setValue(admission.dateOfDeath);\n        this.personalForm.controls['service'].setValue(admission.service);\n\n        this.getFridgesByServiceId(admission.service);\n        this.personalForm.controls['fridge'].setValue(admission.fridge);\n        for (let i=0; i< admission.nextOfKins.length;i++){\n            this.nextOfKinForm.controls['fullName'].setValue(admission.nextOfKins[i].fullName);\n            this.nextOfKinForm.controls['documentNumber'].setValue(admission.nextOfKins[i].documentNumber);\n            this.nextOfKinForm.controls['gender'].setValue(admission.nextOfKins[i].gender);\n            this.nextOfKinForm.controls['county'].setValue(admission.nextOfKins[i].county);\n            this.nextOfKinForm.controls['country'].setValue(admission.nextOfKins[i].country);\n        }\n\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Admission} from './admission.model';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable()\nexport class AdmissionService {\n    constructor(public http: HttpClient) { }\n\n    getAdmissions(): Observable<Admission[]> {\n        return this.http.get<Admission[]>(environment.BASE_URL + 'morg/admissions');\n    }\n    addAdmission(admission: Admission) {\n        return this.http.post(environment.BASE_URL + 'morg/admission', admission);\n    }\n\n    getFridgesByServiceId(id: number): Observable<Fridge[]> {\n        return this.http.get<Fridge[]>(environment.BASE_URL + 'common/fridges?serviceId=' + id);\n    }\n\n    handleError(error) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n        } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","export default \".img-upload-btn {\\n  position: absolute;\\n  padding: 0;\\n  width: calc(100% - 30px);\\n  height: 38px;\\n  opacity: 0;\\n}\\n\\n.image-wrapper {\\n  position: relative;\\n}\\n\\n.image-wrapper .delete-img {\\n  position: absolute;\\n  top: 8px;\\n  right: 10px;\\n  border: 2px solid #fff;\\n  color: #fff;\\n  padding: 3px 5px;\\n  border-radius: 50%;\\n  visibility: hidden;\\n  cursor: pointer;\\n}\\n\\n.image-wrapper:hover .delete-img {\\n  visibility: visible;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvYWRtaXNzaW9uL2ltYWdlLXVwbG9hZGVyL0E6XFxpJm1fY29kZV90ZXN0XFxjb2RlX3Rlc3Qvc3JjXFxhcHBcXHBhZ2VzXFxtb3J0dWFyeVxcYWRtaXNzaW9uXFxpbWFnZS11cGxvYWRlclxcaW1hZ2UtdXBsb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2FkbWlzc2lvbi9pbWFnZS11cGxvYWRlci9pbWFnZS11cGxvYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLHdCQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0o7O0FEQUk7RUFDSSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQ0VSOztBREFJO0VBQ0ksbUJBQUE7QUNFUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2FkbWlzc2lvbi9pbWFnZS11cGxvYWRlci9pbWFnZS11cGxvYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWctdXBsb2FkLWJ0bntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcGFkZGluZzogMDtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMzBweCk7XG4gICAgaGVpZ2h0OiAzOHB4O1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5pbWFnZS13cmFwcGVye1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAuZGVsZXRlLWltZ3tcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDhweDtcbiAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmY7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAmOmhvdmVyIC5kZWxldGUtaW1ne1xuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgIH1cbn1cbiIsIi5pbWctdXBsb2FkLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xuICBoZWlnaHQ6IDM4cHg7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5pbWFnZS13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmltYWdlLXdyYXBwZXIgLmRlbGV0ZS1pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogOHB4O1xuICByaWdodDogMTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDNweCA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uaW1hZ2Utd3JhcHBlcjpob3ZlciAuZGVsZXRlLWltZyB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59Il19 */\"","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-image-uploader',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './image-uploader.component.html',\n  styleUrls: ['./image-uploader.component.scss']\n})\nexport class ImageUploaderComponent {\n    public image:any;\n\n    fileChange(input){\n        const reader = new FileReader();\n        if (input.files.length) {\n            const file = input.files[0];\n            reader.onload = () => {\n                this.image = reader.result;\n            }\n            reader.readAsDataURL(file);\n        }\n    }\n\n    removeImage(): void{\n        this.image = '';\n    }\n\n}\n\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class EditorComponent{\n  public ckeditorContent:string;\n  public config:any;\n\n  constructor() {\n    this.ckeditorContent = '<div>Hey we are testing CKEditor</div>';\n    this.config = {\n        uiColor: '#F0F3F4',\n        height: '350',\n        extraPlugins: 'divarea'\n    };\n  }\n\n  onChange(event: any) {\n    setTimeout(() => {\n      this.ckeditorContent = event;\n    });\n  }\n  onReady(event: any) { }\n  onFocus(event: any) { \n      console.log(\"editor is focused\");\n  }\n  onBlur(event: any) {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable()\nexport class FridgeService {\n    constructor(public http: HttpClient) { }\n    getFridges(): Observable<Fridge[]> {\n        return this.http.get<Fridge[]>(environment.BASE_URL + 'common/fridges/list');\n    }\n    handleError(error) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n        } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {FridgeService} from './fridge.service';\n\n@Component({\n  selector: 'app-layouts',\n  templateUrl: './fridgetracking.component.html',\n  encapsulation: ViewEncapsulation.None,\n    providers: [FridgeService]\n})\nexport class FridgetrackingComponent implements OnInit {\n    fridges: Fridge[];\n  constructor(private fridgeService: FridgeService) {\n  }\n\n  public sales = [{ name: 'TEST 1', value: 'VMILELE01' }];\n  public salesBgColor = { domain: ['#2F3E9E'] };\n\n  public likes = [{ name: 'TEST 2', value: 'VMILELE02' }];\n  public likesBgColor = { domain: ['#D22E2E'] };\n\n  public downloads = [{ name: 'EMPTY', value: 'VMILELE03' }];\n  public downloadsBgColor = { domain: ['#378D3B'] };\n\n  public profit = [{ name: 'EMPTY', value: 'VMILELE04'}];\n  public profitBgColor = { domain: ['#0096A6'] };\n\n  public messages = [{ name: 'EMPTY', value: 'VMILELE05' }];\n  public messagesBgColor = { domain: ['#606060'] };\n\n  public members = [{ name: 'EMPTY', value: 'VMILELE06' }];\n  public membersBgColor = { domain: ['#F47B00'] };\n\n\n  public infoLabelFormat(c): string {\n    switch (c.data.name) {\n      case 'sales':\n        return `<i class=\"fa fa-shopping-cart mr-2\"></i>${c.label}`;\n      case 'likes':\n        return `<i class=\"fa fa-thumbs-o-up mr-2\"></i>${c.label}`;\n      case 'downloads':\n        return `<i class=\"fa fa-download mr-2\"></i>${c.label}`;\n      case 'profit':\n        return `<i class=\"fa fa-money mr-2\"></i>${c.label}`;\n      case 'messages':\n        return `<i class=\"fa fa-comment-o mr-2\"></i>${c.label}`;\n      case 'members':\n        return `<i class=\"fa fa-user mr-2\"></i>${c.label}`;\n      default:\n        return c.label;\n    }\n  }\n\n  public infoValueFormat(c): string {\n    switch (c.data.extra ? c.data.extra.format : '') {\n      case 'currency':\n        return `\\$${Math.round(c.value).toLocaleString()}`;\n      case 'percent':\n        return `${Math.round(c.value * 100)}%`;\n      default:\n        return c.value.toLocaleString();\n    }\n  }\n\n  public onSelect(event) {\n    console.log(event);\n  }\n\n    public getFridges(): void {\n        this.fridgeService.getFridges().subscribe(fridges =>\n            this.fridges = fridges\n        );\n    }\n\n  ngOnInit() {\n    this.getFridges();\n  }\n\n}\n","export default \".custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  border-radius: 0.25rem;\\n  display: inline-block;\\n  width: 2rem;\\n}\\n\\n.custom-day:hover {\\n  background-color: #e6e6e6;\\n}\\n\\n.weekend {\\n  background-color: #f0ad4e;\\n  border-radius: 1rem;\\n  color: white;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\n.input-group-addon .fa-calendar {\\n  cursor: pointer;\\n}\\n\\n.star {\\n  position: relative;\\n  display: inline-block;\\n  font-size: 2rem;\\n  color: #d3d3d3;\\n}\\n\\n.full {\\n  color: red;\\n}\\n\\n.half {\\n  position: absolute;\\n  display: inline-block;\\n  overflow: hidden;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvQTpcXGkmbV9jb2RlX3Rlc3RcXGNvZGVfdGVzdC9zcmNcXGFwcFxccGFnZXNcXG1vcnR1YXJ5XFxpbnZvaWNlc1xcaW52b2ljZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvaW52b2ljZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQkFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtBQ0NKOztBRENBO0VBQ0kseUJBQUE7QUNFSjs7QURBQTtFQUNJLHlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FDR0o7O0FEREE7RUFDSSxhQUFBO0FDSUo7O0FEREE7RUFDSSxlQUFBO0FDSUo7O0FEQUE7RUFDSSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUNHSjs7QUREQTtFQUNJLFVBQUE7QUNJSjs7QURGQTtFQUNJLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxnQkFBQTtFQUNBLFVBQUE7QUNLSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2ludm9pY2VzL2ludm9pY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWRheSB7ICAgICAgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDJyZW07XG59XG4uY3VzdG9tLWRheTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbn1cbi53ZWVrZW5kIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBhZDRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgY29sb3I6IHdoaXRlO1xufVxuLmhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLmlucHV0LWdyb3VwLWFkZG9uIC5mYS1jYWxlbmRhcntcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG4gXG5cbi5zdGFyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICBcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGNvbG9yOiAjZDNkM2QzO1xufVxuLmZ1bGwge1xuICAgIGNvbG9yOiByZWQ7XG59XG4uaGFsZiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNvbG9yOiByZWQ7XG59IiwiLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDJyZW07XG59XG5cbi5jdXN0b20tZGF5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbn1cblxuLndlZWtlbmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBhZDRlO1xuICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaW5wdXQtZ3JvdXAtYWRkb24gLmZhLWNhbGVuZGFyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc3RhciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDJyZW07XG4gIGNvbG9yOiAjZDNkM2QzO1xufVxuXG4uZnVsbCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5oYWxmIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNvbG9yOiByZWQ7XG59Il19 */\"","import {Component, ViewEncapsulation, ViewChild, OnInit} from '@angular/core';\nimport {Client} from '../../customer/customer.model';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {CustomerService} from '../../customer/customer.service';\nimport {MenuService} from '../../../theme/components/menu/menu.service';\nimport {Service} from '../../services/service.model';\nimport {MileleService} from '../../services/service.service';\nimport {ngModuleJitUrl} from '@angular/compiler';\nimport {ServiceParam} from '../../shared/models/serviceparam.model';\nimport {Invoice} from '../../shared/models/invoice.model';\nimport {Bookinginvoice} from '../../inventory/purchase/bookinginvoice.model';\nimport {InvoiceService} from '../../invoice/invoice.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-controls',\n    templateUrl: './invoice.component.html',\n    styleUrls: ['./invoice.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [MileleService, CustomerService, InvoiceService]\n})\nexport class InvoiceComponent implements OnInit {\n    public p: any;\n    public type = 'list';\n    public modalRef: NgbModalRef;\n    public frmService: FormGroup;\n    public frmInvoice: FormGroup;\n    public router: Router;\n    // public service: any = {};\n    public params: ServiceParam[];\n    public services: Service[];\n    public invoiceServices: any[] = [];\n    public clients: Client[];\n    serviceName: string;\n    private unitName: string;\n    private total: number;\n    private showInvoice: boolean ;\n    private showList: boolean ;\n    private service: Service;\n\n\n    constructor(public fb: FormBuilder,\n                public toastrService: ToastrService,\n                public membershipService: CustomerService,\n                public mileleService: MileleService,\n                public modalService: NgbModal, public invoiceService: InvoiceService, private activatedRoute: ActivatedRoute, router: Router) {\n        this.router = router;\n    }\n\n\n    ngOnInit() {\n        this.showInvoice = true;\n        this.showList = false;\n        this.getServices();\n        this.getClients();\n        this.params = [\n            {paramId: 1, paramName: 'Quantity'},\n            {paramId: 2, paramName: 'Amount'}\n        ];\n        this.frmInvoice = this.fb.group({\n            clientId: null\n        });\n\n        this.frmService = this.fb.group({\n            service: null,\n            params: null,\n            quantity: null,\n            price: null\n\n        });\n    }\n\n    public getPriceDetails(service): void {\n        if (service) {\n            console.log(service);\n            // this.serviceId = service.id;\n            this.service = service;\n        }\n    }\n\n    public getServices(): void {\n        this.mileleService.getServices().subscribe(services =>\n            this.services = services\n        );\n    }\n\n    public getClients(): void {\n        this.membershipService.getClients().subscribe(clients =>\n            this.clients = clients\n        );\n    }\n\n    // public openModal(modalContent, service) {\n    //     console.log(service);\n    //     if (service) {\n    //         this.service = service;\n    //     } else {\n    //         this.service = new Service();\n    //     }\n    //     this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n    //     this.modalRef.result.then((result) => {\n    //         this.frmService.reset();\n    //     }, (reason) => {\n    //         this.frmService.reset();\n    //     });\n    //     this.showInvoice = false;\n    //     this.showList = true;\n    // }\n\n\n    public openAddServiceModal(modalContent) {\n        // console.log(service);\n        this.service = new Service();\n        this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n        this.modalRef.result.then((result) => {\n            this.frmService.reset({});\n        }, (reason) => {\n           this.frmService.reset({});\n        });\n        // this.showInvoice = true;\n        // this.showList = true;\n    }\n\n    public closeModal() {\n        this.modalRef.close();\n    }\n\n    public onSubmit(srv: Service): void {\n\n        // for (let i = 0; i < this.services.length; i++) {\n        //     if (this.frmService.value.serviceId === this.services[i].id.toString()) {\n        //         this.serviceName = this.services[i].serviceName;\n        //         this.unitName = this.services[i].unitName;\n        //     }\n        // }\n        if (this.frmService.valid) {\n            // console.log('Form is Valid');\n            // console.log(srv);\n            // console.log(srv.serviceId);\n            // console.log(srv.serviceName);\n            let svc = {'serviceId': this.service.id,\n                'serviceName': this.service.serviceName,\n                'unit': this.service.unitName, 'price': this.service.price,\n                'quantity': this.frmService.value.quantity,\n                'totalAmount': this.service.price * this.frmService.value.quantity};\n            this.invoiceServices.push(svc);\n                //this.total += this.frmService.value.price * this.frmService.value.quantity;\n            console.log(this.invoiceServices);\n                this.modalRef.close();\n        }\n    }\n    public onSubmitInvoice(invoice: Invoice): void {\n        this.showInvoice = true;\n        this.showList = false;\n        invoice.invoiceNumber = '#INV';\n        invoice.services = this.invoiceServices;\n        let bookinginvoice = new Bookinginvoice();\n        bookinginvoice.clientId = invoice.clientId;\n        bookinginvoice.invoiceNo = '#INV';\n        bookinginvoice.services = this.invoiceServices;\n        // console.log(invoice);\n        // console.log(bookinginvoice);\n        this.addBookingInvoice(bookinginvoice);\n    }\n\n    public addBookingInvoice(bookinginvoice: Bookinginvoice) {\n        this.invoiceService.addBookingInvoice(bookinginvoice).subscribe(resp => {\n            if (resp) {\n                if (resp.resultCode === '200') {\n                    this.toastrService.info(resp.resultMessage, 'Success');\n                    this.router.navigate(['/invoice']);\n                } else {\n                    this.toastrService.error(resp.resultMessage, 'Error');\n                }\n            }\n        });\n    }\n\n    getSum(): number {\n        let sum = 0;\n        for (let i = 0; i < this.invoiceServices.length; i++) {\n            sum += this.invoiceServices[i].totalAmount;\n        }\n        return sum;\n    }\n}\n\n","export default \".m-img-upload-btn {\\n  position: absolute;\\n  padding: 0;\\n  width: calc(100% - 30px);\\n  height: 38px;\\n  opacity: 0;\\n}\\n\\n.images-container {\\n  width: 100%;\\n  top: 15px;\\n  border: 2px dashed #ccc;\\n  background: #f1f1f1;\\n  min-height: 293px;\\n  padding: 10px;\\n  display: block;\\n}\\n\\n.images-container .m-image-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  margin: 10px;\\n  width: 120px;\\n  height: 120px;\\n}\\n\\n.images-container .m-image-wrapper .m-delete-img {\\n  position: absolute;\\n  top: 8px;\\n  right: 10px;\\n  border: 2px solid #fff;\\n  color: #fff;\\n  padding: 3px 5px;\\n  border-radius: 50%;\\n  visibility: hidden;\\n  cursor: pointer;\\n}\\n\\n.images-container .m-image-wrapper:hover .m-delete-img {\\n  visibility: visible;\\n}\\n\\n.images-container .m-image-wrapper img {\\n  width: 120px;\\n  height: 120px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvbXVsdGlwbGUtaW1hZ2UtdXBsb2FkZXIvQTpcXGkmbV9jb2RlX3Rlc3RcXGNvZGVfdGVzdC9zcmNcXGFwcFxccGFnZXNcXG1vcnR1YXJ5XFxpbnZvaWNlc1xcbXVsdGlwbGUtaW1hZ2UtdXBsb2FkZXJcXG11bHRpcGxlLWltYWdlLXVwbG9hZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9tb3J0dWFyeS9pbnZvaWNlcy9tdWx0aXBsZS1pbWFnZS11cGxvYWRlci9tdWx0aXBsZS1pbWFnZS11cGxvYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLHdCQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7QUNDSjs7QURDQTtFQUNJLFdBQUE7RUFDQSxTQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUNFSjs7QURESTtFQUNJLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUNHUjs7QURGUTtFQUNJLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7RUFDQSxzQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FDSVo7O0FERlE7RUFDSSxtQkFBQTtBQ0laOztBREZRO0VBQ0csWUFBQTtFQUNBLGFBQUE7QUNJWCIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2ludm9pY2VzL211bHRpcGxlLWltYWdlLXVwbG9hZGVyL211bHRpcGxlLWltYWdlLXVwbG9hZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm0taW1nLXVwbG9hZC1idG57XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xuICAgIGhlaWdodDogMzhweDtcbiAgICBvcGFjaXR5OiAwO1xufVxuLmltYWdlcy1jb250YWluZXJ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAxNXB4O1xuICAgIGJvcmRlcjogMnB4IGRhc2hlZCAjY2NjO1xuICAgIGJhY2tncm91bmQ6IHJnYigyNDEsIDI0MSwgMjQxKTtcbiAgICBtaW4taGVpZ2h0OiAyOTNweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIC5tLWltYWdlLXdyYXBwZXJ7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgICAgaGVpZ2h0OiAxMjBweDtcbiAgICAgICAgLm0tZGVsZXRlLWltZ3tcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogOHB4O1xuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgICY6aG92ZXIgLm0tZGVsZXRlLWltZ3tcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICAgIH1cbiAgICAgICAgaW1ne1xuICAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgIGhlaWdodDogMTIwcHg7ICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfSAgIFxufVxuXG4iLCIubS1pbWctdXBsb2FkLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xuICBoZWlnaHQ6IDM4cHg7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5pbWFnZXMtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMTVweDtcbiAgYm9yZGVyOiAycHggZGFzaGVkICNjY2M7XG4gIGJhY2tncm91bmQ6ICNmMWYxZjE7XG4gIG1pbi1oZWlnaHQ6IDI5M3B4O1xuICBwYWRkaW5nOiAxMHB4O1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5pbWFnZXMtY29udGFpbmVyIC5tLWltYWdlLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAxMHB4O1xuICB3aWR0aDogMTIwcHg7XG4gIGhlaWdodDogMTIwcHg7XG59XG4uaW1hZ2VzLWNvbnRhaW5lciAubS1pbWFnZS13cmFwcGVyIC5tLWRlbGV0ZS1pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogOHB4O1xuICByaWdodDogMTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDNweCA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uaW1hZ2VzLWNvbnRhaW5lciAubS1pbWFnZS13cmFwcGVyOmhvdmVyIC5tLWRlbGV0ZS1pbWcge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuLmltYWdlcy1jb250YWluZXIgLm0taW1hZ2Utd3JhcHBlciBpbWcge1xuICB3aWR0aDogMTIwcHg7XG4gIGhlaWdodDogMTIwcHg7XG59Il19 */\"","import { Component, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-multiple-image-uploader',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './multiple-image-uploader.component.html',\n  styleUrls: ['./multiple-image-uploader.component.scss']\n})\nexport class MultipleImageUploaderComponent {\n    public images: string[] = [];\n\n    constructor( private changeDetectorRef: ChangeDetectorRef ) {\n    }\n\n    fileChange(input) {\n        this.readFiles(input.files);\n    }\n\n    readFile(file, reader, callback) {\n        reader.onload = () => {\n            callback(reader.result);\n        };\n        reader.readAsDataURL(file);\n    }\n\n    readFiles(files, index= 0) {\n        const reader = new FileReader();\n\n        if (index in files) {\n            this.readFile(files[index], reader, (result) => {\n                this.images.push(result);\n                this.readFiles(files, index + 1);\n            });\n        } else {\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    removeImage(index): void {\n        this.images.splice(index, 1);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { InvoiceComponent } from './invoices/invoice.component';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ImageUploaderComponent } from './admission/image-uploader/image-uploader.component';\nimport { MultipleImageUploaderComponent } from './invoices/multiple-image-uploader/multiple-image-uploader.component';\nimport { FridgetrackingComponent } from './fridgetracking/fridgetracking.component';\nimport { AdmissionComponent } from './admission/admission.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PipesModule } from '../../theme/pipes/pipes.module';\n\n\nexport const routes = [\n  { path: '', redirectTo: 'controls', pathMatch: 'full'},\n  { path: 'invoice', component: InvoiceComponent, data: { breadcrumb: 'Invoice' } },\n  { path: 'fridgetracking', component: FridgetrackingComponent, data: { breadcrumb: 'Fridge Tracking' } },\n  { path: 'admission', component: AdmissionComponent, data: { breadcrumb: 'Admission' } }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n      HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MultiselectDropdownModule,\n    NgbModule,\n    CustomFormsModule,\n    NgxChartsModule,\n    CKEditorModule,\n    DirectivesModule,\n      NgxPaginationModule,\n      PipesModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    InvoiceComponent,\n    ImageUploaderComponent,\n    MultipleImageUploaderComponent,\n    FridgetrackingComponent,\n    AdmissionComponent,\n    EditorComponent\n  ]\n})\nexport class MortuaryModule { }\n"],"sourceRoot":"webpack:///"}