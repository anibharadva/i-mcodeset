{"version":3,"sources":["./src/app/pages/invoice/invoice.service.ts","./src/app/pages/services/service.model.ts","./src/app/pages/services/service.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Invoicemaster} from '../shared/models/invoicemaster';\nimport {Invoiceitemdetails} from '../shared/models/invoiceitemdetails';\nimport {environment} from '../../../environments/environment';\nimport {Bookinginvoice} from '../inventory/purchase/bookinginvoice.model';\n\n@Injectable()\nexport class InvoiceService {\n    constructor(public http: HttpClient) { }\n    getInvoices(): Observable<Invoicemaster[]> {\n        return this.http.get<Invoicemaster[]>(environment.BASE_URL + 'common/invoice/list');\n    }\n\n    getInvoiceItems(id): Observable<Invoiceitemdetails[]> {\n        return this.http.get<Invoiceitemdetails[]>(environment.BASE_URL + 'common/invoice/items/list/?invoiceId=' + id);\n    }\n    addBookingInvoice(bookinginvoice: Bookinginvoice): Observable<any> {\n        return this.http.post(environment.BASE_URL + 'common/invoice/save', bookinginvoice);\n    }\n    getBookingInvoices(): Observable<Bookinginvoice[]> {\n        return this.http.get<Bookinginvoice[]>(environment.BASE_URL + 'inventory/invoices');\n    }\n    handleError(error) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n        } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import {Servicetype} from '../servicetype/servicetype.model';\nimport {Uom} from '../shared/models/uom.model';\nimport {Country} from '../shared/models/country.model';\nimport {County} from '../shared/models/county.model';\nimport {ServiceParam} from '../shared/models/serviceparam.model';\n\n\nexport class Service {\n    id: number;\n    serviceId: string;\n    serviceCode: string;\n    serviceName: string;\n    unit: number;\n    unitName: string;\n    price: number;\n    servicetype: number;\n    dateCreated: string;\n    serviceTypeName: string;\n    status: String;\n    country: number;\n    county: number;\n    params: ServiceParam;\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Service} from './service.model';\nimport {Uom} from '../shared/models/uom.model';\nimport {catchError} from 'rxjs/operators';\n\nimport {Servicetype} from '../servicetype/servicetype.model';\nimport {environment} from '../../../environments/environment';\n\n\n@Injectable()\nexport class MileleService {\n    constructor(public http: HttpClient) {\n    }\n\n    getServices(): Observable<Service[]> {\n        return this.http.get<Service[]>(environment.BASE_URL + 'common/services');\n    }\n\n    getServiceTypes(): Observable<Servicetype[]> {\n        return this.http.get<Servicetype[]>(environment.BASE_URL + 'common/service_types');\n    }\n    getUoms(): Observable<Uom[]> {\n        return this.http.get<Uom[]>(environment.BASE_URL + 'common/uoms');\n    }\n    addService(service: Service) {\n        return this.http.post(environment.BASE_URL + 'common/service/save', service).pipe(\n            catchError(this.handleError)\n        );\n    }\n    updateService(service: Service) {\n        return this.http.post(environment.BASE_URL  + 'common/service/save', service);\n    }\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('An error occurred:', error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`);\n        }\n        // return an observable with a user-facing error message\n        return throwError(\n            'Something bad happened; please try again later.');\n    }\n}\n"],"sourceRoot":"webpack:///"}