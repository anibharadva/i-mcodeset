{"version":3,"sources":["./src/app/pages/register/register.component.html","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,izGAAkvG,iX;;;;;;;;;;;;ACAjwG;AAAe,qFAAsB,uBAAuB,GAAG,0CAA0C,gBAAgB,iBAAiB,mBAAmB,sBAAsB,uBAAuB,oBAAoB,GAAG,6CAA6C,2oC;;;;;;;;;;;;;;;;;;;;;ACAjN;AACpB;AACwD;AAQjG,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAQ1B,YAAY,MAAc,EAAE,EAAe;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC;YACjB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9E,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC;YACtE,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC7C,EAAE,EAAC,SAAS,EAAE,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAC,CAAC,CAAC;QAElE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IACjE,CAAC;IAEO,QAAQ,CAAC,MAAc;QAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpC;IACL,CAAC;IAED,eAAe;QACX,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;CACJ;;YAzBuB,sDAAM;YAAM,0DAAW;;AARlC,iBAAiB;IAN7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kOAAwC;QAExC,aAAa,EAAE,+DAAiB,CAAC,IAAI;;KACtC,CAAC;2EASsB,sDAAM,EAAM,0DAAW;GARlC,iBAAiB,CAiC7B;AAjC6B;AAmCvB,SAAS,cAAc,CAAC,OAAoB;IAC/C,MAAM,WAAW,GAAG,yCAAyC,CAAC;IAC9D,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACnD,OAAO,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC;KAC/B;AACL,CAAC;AAEM,SAAS,iBAAiB,CAAC,WAAmB,EAAE,uBAA+B;IAClF,OAAO,CAAC,KAAgB,EAAE,EAAE;QACxB,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QACrE,IAAI,QAAQ,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;YAC/C,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAC,mBAAmB,EAAE,IAAI,EAAC,CAAC,CAAC;SACtE;IACL,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC5DwC;AACM;AACA;AACmB;AACT;AAElD,MAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE,SAAS,EAAE,MAAM,EAAE;CAC9D,CAAC;AAaF,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAX1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE;YACZ,qEAAiB;SAClB;KACF,CAAC;GACW,cAAc,CAAI;AAAJ","file":"pages-register-register-module-es2015.js","sourcesContent":["export default \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 register-container\\\">\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\n        <div class=\\\"card border-0 box-shadow rounded-0\\\">\\n            <div class=\\\"card-header d-flex justify-content-center align-items-center border-0 box-shadow\\\">\\n                <i class=\\\"fa fa-registered\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div class=\\\"card-body text-center pb-1\\\">\\n                <h2>Register member</h2>\\n                <a routerLink=\\\"/login\\\" class=\\\"transition\\\">Already have an account? Sign in!</a>\\n\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"name\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Full Name\\\" type=\\\"text\\\"> \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('name').touched\\\">\\n                            <span *ngIf=\\\"form.get('name').hasError('required')\\\">Full Name is required</span>\\n                            <span *ngIf=\\\"form.get('name').hasError('minlength')\\\">Minimum of 3 characters</span>\\n                        </small>       \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\"> \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched\\\">\\n                            <span *ngIf=\\\"form.get('email').hasError('required')\\\">Email is required</span>\\n                            <span *ngIf=\\\"form.get('email').hasError('invalidEmail')\\\">Invalid email address</span>\\n                        </small> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" minlength=\\\"6\\\">\\n                         <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched\\\">\\n                            <span *ngIf=\\\"form.get('password').hasError('required')\\\">Password is required</span>\\n                            <span *ngIf=\\\"form.get('password').hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</span>\\n                        </small>                     \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"confirmPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('confirmPassword').touched\\\">\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('required')\\\">Confirm Password is required</span>\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('mismatchedPasswords')\\\">Passwords do not match</span>\\n                        </small> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <p class=\\\"terms\\\">By creating an account, you agree our <a class=\\\"transition terms\\\" href=\\\"javascript:void(0);\\\">Terms & Privacy Policy</a></p>                  \\n                    </div>             \\n                    <div class=\\\"form-group\\\">\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block\\\" type=\\\"submit\\\">Sign up</button>\\n                    </div>\\n                </form>  \\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \".register-container {\\n  position: absolute;\\n}\\n.register-container .card .card-header {\\n  width: 80px;\\n  height: 80px;\\n  margin: 0 auto;\\n  margin-top: -40px;\\n  border-radius: 50%;\\n  font-size: 36px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvQTpcXGkmbV9jb2RlX3Rlc3RcXGNvZGVfdGVzdC9zcmNcXGFwcFxccGFnZXNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQ0NKO0FEQ1E7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQ0NaIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItY29udGFpbmVye1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAuY2FyZHtcbiAgICAgICAgLmNhcmQtaGVhZGVye1xuICAgICAgICAgICAgd2lkdGg6IDgwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC00MHB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgICAgICB9XG4gICAgfVxufSIsIi5yZWdpc3Rlci1jb250YWluZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG4ucmVnaXN0ZXItY29udGFpbmVyIC5jYXJkIC5jYXJkLWhlYWRlciB7XG4gIHdpZHRoOiA4MHB4O1xuICBoZWlnaHQ6IDgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXJnaW4tdG9wOiAtNDBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBmb250LXNpemU6IDM2cHg7XG59Il19 */\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class RegisterComponent {\n    public router: Router;\n    public form: FormGroup;\n    public name: AbstractControl;\n    public email: AbstractControl;\n    public password: AbstractControl;\n    public confirmPassword: AbstractControl;\n\n    constructor(router: Router, fb: FormBuilder) {\n        this.router = router;\n        this.form = fb.group({\n            name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n            email: ['', Validators.compose([Validators.required, emailValidator])],\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required]\n        }, {validator: matchingPasswords('password', 'confirmPassword')});\n\n        this.name = this.form.controls['name'];\n        this.email = this.form.controls['email'];\n        this.password = this.form.controls['password'];\n        this.confirmPassword = this.form.controls['confirmPassword'];\n    }\n\n     public onSubmit(values: Object): void {\n        if (this.form.valid) {\n            console.log(values);\n            this.router.navigate(['/login']);\n        }\n    }\n\n    ngAfterViewInit() {\n        document.getElementById('preloader').classList.add('hide');\n    }\n}\n\nexport function emailValidator(control: FormControl): {[key: string]: any} {\n    const emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n    if (control.value && !emailRegexp.test(control.value)) {\n        return {invalidEmail: true};\n    }\n}\n\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n        const password = group.controls[passwordKey];\n        const passwordConfirmation = group.controls[passwordConfirmationKey];\n        if (password.value !== passwordConfirmation.value) {\n            return passwordConfirmation.setErrors({mismatchedPasswords: true});\n        }\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register.component';\n\nexport const routes = [\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    RegisterComponent\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}