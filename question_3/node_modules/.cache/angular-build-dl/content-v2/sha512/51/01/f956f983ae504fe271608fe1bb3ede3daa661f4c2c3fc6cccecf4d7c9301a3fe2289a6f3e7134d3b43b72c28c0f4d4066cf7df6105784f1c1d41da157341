{"version":3,"sources":["src/app/pages/mortuary/admission/admission.component.html","src/app/pages/mortuary/admission/image-uploader/image-uploader.component.html","src/app/pages/mortuary/editor/editor.component.html","src/app/pages/mortuary/fridgetracking/fridgetracking.component.html","src/app/pages/mortuary/invoices/invoice.component.html","src/app/pages/mortuary/invoices/multiple-image-uploader/multiple-image-uploader.component.html","src/app/pages/customer/customer.service.ts","src/app/pages/inventory/purchase/bookinginvoice.model.ts","src/app/pages/mortuary/admission/admission.component.scss","src/app/pages/mortuary/admission/admission.component.ts","src/app/pages/mortuary/admission/admission.service.ts","src/app/pages/mortuary/admission/image-uploader/image-uploader.component.scss","src/app/pages/mortuary/admission/image-uploader/image-uploader.component.ts","src/app/pages/mortuary/editor/editor.component.ts","src/app/pages/mortuary/fridgetracking/fridge.service.ts","src/app/pages/mortuary/fridgetracking/fridgetracking.component.ts","src/app/pages/mortuary/invoices/invoice.component.scss","src/app/pages/mortuary/invoices/invoice.component.ts","src/app/pages/mortuary/invoices/multiple-image-uploader/multiple-image-uploader.component.scss","src/app/pages/mortuary/invoices/multiple-image-uploader/multiple-image-uploader.component.ts","src/app/pages/mortuary/mortuary.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row mb-1\\\" *ngIf=\\\"showList\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search client by ID Number...\\\"\\n                   class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"toggleShow()\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"type=='list' || showList\\\" class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>Client Name</th>\\n                    <th>Id/Passport Number</th>\\n                    <th>Date</th>\\n                    <th>Action</th>\\n\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let admission of admissions  | ClientSearchPipe : searchText | paginate: { itemsPerPage: 6, currentPage: p }\\\">\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.clientName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.clientDocumentNumber}}</td>\\n\\n                    <!--<td class=\\\"align-middle text-truncate\\\">{{client.county.countyName}}</td>-->\\n                    <td class=\\\"align-middle text-truncate\\\">{{admission.createdOn | date:\\\"dd MMMM, yyyy\\\"}}</td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"editInvoice(admission)\\\"><i\\n                                    class=\\\"fa fa-pencil\\\"></i></button>\\n                        </div>\\n                    </td>\\n                    <!--<td class=\\\"align-middle\\\">-->\\n                        <!--<div class=\\\"btn-group\\\" role=\\\"group\\\">-->\\n                            <!--<button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"generateInvoice(admission)\\\" ><i-->\\n                                    <!--class=\\\"fa fa-book\\\"></i><span>Generate Invoice</span></button>-->\\n                        <!--</div>-->\\n                    <!--</td>-->\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"showList\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"showDetails\\\">\\n    <div class=\\\"col\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Mortuary Admission</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                    <a data-widgster=\\\"fullscreen\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-expand\\\"></i></a>\\n                    <a data-widgster=\\\"restore\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-compress\\\"></i></a>\\n                    <!--<a data-widgster=\\\"close\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-times\\\"></i></a>-->\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"!confirmed\\\" class=\\\"card-body widget-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div *ngFor=\\\"let step of steps; let last = last\\\" class=\\\"col-md-3 col-sm-6 col-12 step text-center\\\">\\n                        <div class=\\\"d-flex justify-content-center align-items-center text-white pl-2 pr-2 mb-2 rounded step-content\\\"\\n                             [class.bg-success]=\\\"step.valid\\\" [class.bg-danger]=\\\"step.active\\\"\\n                             [class.confirmed]=\\\"confirmed\\\">\\n                            <i class=\\\"fa {{ step.icon }} mr-2\\\" aria-hidden=\\\"true\\\"></i>\\n                            <span class=\\\"step-name\\\">{{step.name}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div *ngFor=\\\"let step of steps\\\" [hidden]=\\\"!step.active\\\" class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <h4 class=\\\"mt-3 mb-3\\\"><i class=\\\"fa {{ step.icon }}\\\"></i> {{step.name}}</h4>\\n                    </div>\\n\\n                    <form *ngIf=\\\"step.name=='Client Details'\\\" [formGroup]=\\\"clientForm\\\" class=\\\"row bg-light pt-2\\\">\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && clientForm.get('clientId').hasError('required'), 'has-success' : !clientForm.get('clientId').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Select Clients</label>\\n                            <select formControlName=\\\"clientId\\\" class=\\\"form-control\\\"\\n                                    [ngClass]=\\\"{'form-control-danger' :  clientForm.get('clientId').hasError('required'), 'form-control-success' :  !clientForm.get('clientId').hasError('required') }\\\">\\n                                <option *ngFor=\\\"let client of clients\\\" [selected]=\\\"client.id==clientId\\\" [value]=\\\"client.id\\\">{{client.fullName}}</option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && clientForm.get('clientId').hasError('required')\\\">Client is\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" style=\\\"margin-top: 15px;\\\">\\n                            <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"showClientMaster()\\\">Add Client &nbsp;<i\\n                                    class=\\\"fa fa-plus \\\"></i></button>\\n                        </div>\\n\\n                    </form>\\n\\n                    <form *ngIf=\\\"step.name=='Deceased Details'\\\" [formGroup]=\\\"personalForm\\\" class=\\\"row bg-light pt-2\\\">\\n\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('fullName').hasError('required'), 'has-success' : !personalForm.get('fullName').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Full Name</label>\\n                            <input formControlName=\\\"fullName\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  personalForm.get('fullName').hasError('required'), 'form-control-success' :  !personalForm.get('fullName').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('fullName').hasError('required')\\\">Full\\n                                Name is required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('documentNumber').hasError('required'), 'has-success' : !personalForm.get('documentNumber').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">ID/Passport Number</label>\\n                            <input formControlName=\\\"documentNumber\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  personalForm.get('documentNumber').hasError('required'), 'form-control-success' :  !personalForm.get('documentNumber').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('documentNumber').hasError('required')\\\">\\n                                Document Number required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"   [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('gender').hasError('required'), 'has-success' : !personalForm.get('gender').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Gender</label>\\n                            <select formControlName=\\\"gender\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{'form-control-danger' :  personalForm.get('gender').hasError('required'), 'form-control-success' :  !personalForm.get('gender').hasError('required') }\\\">\\n                                <option>Male</option>\\n                                <option>Female</option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('gender').hasError('required')\\\">\\n                                Gender required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('dateOfBirth').hasError('required'), 'has-success' : !personalForm.get('dateOfBirth').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Date Of Birth</label>\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\n                                       formControlName=\\\"dateOfBirth\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"p.toggle()\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                                </div>\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('dateOfBirth').hasError('required')\\\">\\n                                Date of birth required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">County</label>\\n                            <select formControlName=\\\"county\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let county of counties\\\" [value]=\\\"county.countyID\\\">\\n                                    {{county.countyName}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('county').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && personalForm.get('country').hasError('required'),\\n                        'has-success' : !personalForm.get('country').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Country</label>\\n                            <select formControlName=\\\"country\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.countryID\\\">\\n                                    {{country.countryCode}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('country').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('causeOfDeath').hasError('required'), 'has-success' : !personalForm.get('causeOfDeath').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Cause of Death</label>\\n                            <textarea formControlName=\\\"causeOfDeath\\\" class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{'form-control-danger' :  personalForm.get('causeOfDeath').hasError('required'), 'form-control-success' :  !personalForm.get('causeOfDeath').hasError('required') }\\\"\\n                                      type=\\\"text\\\">\\n                            </textarea>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('causeOfDeath').hasError('required')\\\">Cause of Death\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && personalForm.get('dateOfDeath').hasError('required'), 'has-success' : !personalForm.get('dateOfDeath').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Date Of Death</label>\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\n                                       formControlName=\\\"dateOfDeath\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\n                                <div class=\\\"input-group-append\\\" (click)=\\\"p.toggle()\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                                </div>\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('dateOfDeath').hasError('required')\\\">\\n                                Date of birth required\\n                            </small>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-md-6\\\"  >\\n                            <label class=\\\"form-control-label\\\">Description</label>\\n                            <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\" type=\\\"text\\\" ></textarea>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && personalForm.get('service').hasError('required'),\\n                        'has-success' : !personalForm.get('service').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Service</label>\\n                            <select formControlName=\\\"service\\\" class=\\\"form-control\\\" (change)=\\\"getFridgesByServiceId($event.target.value)\\\">\\n                                <option *ngFor=\\\"let service of services\\\" [value]=\\\"service.id\\\" >\\n                                    {{service.serviceName}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('service').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && personalForm.get('fridge').hasError('required'),\\n                        'has-success' : !personalForm.get('fridge').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Fridge</label>\\n                            <select formControlName=\\\"fridge\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let fridge of fridges\\\" [value]=\\\"fridge.id\\\">\\n                                    {{fridge.name}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && personalForm.get('fridge').hasError('required')\\\">Fridge is required\\n                            </small>\\n                        </div>\\n                    </form>\\n\\n                    <form *ngIf=\\\"step.name=='Next of Kin'\\\" [formGroup]=\\\"nextOfKinForm\\\" class=\\\"row bg-light pt-2\\\">\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && nextOfKinForm.get('fullName').hasError('required'), 'has-success' : !nextOfKinForm.get('fullName').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Full Name</label>\\n                            <input formControlName=\\\"fullName\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  nextOfKinForm.get('fullName').hasError('required'), 'form-control-success' :  !nextOfKinForm.get('fullName').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && nextOfKinForm.get('fullName').hasError('required')\\\">First\\n                                Name is required\\n                            </small>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : step.hasError && nextOfKinForm.get('documentNumber').hasError('required'), 'has-success' : !nextOfKinForm.get('documentNumber').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">ID/Passport Number</label>\\n                            <input formControlName=\\\"documentNumber\\\" class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{'form-control-danger' :  nextOfKinForm.get('documentNumber').hasError('required'), 'form-control-success' :  !nextOfKinForm.get('documentNumber').hasError('required') }\\\"\\n                                   type=\\\"text\\\">\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && nextOfKinForm.get('documentNumber').hasError('required')\\\">\\n                                Document Number required\\n                            </small>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">Gender</label>\\n                            <select formControlName=\\\"gender\\\" class=\\\"form-control\\\">\\n                                <option>Male</option>\\n                                <option>Female</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">Mobile Number</label>\\n                            <input formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\"\\n                                   type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"form-control-label\\\">County</label>\\n                            <select formControlName=\\\"county\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let county of counties\\\" [value]=\\\"county.countyID\\\">\\n                                    {{county.countyName}}\\n                                </option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-danger' : step.hasError\\n                        && nextOfKinForm.get('country').hasError('required'),\\n                        'has-success' : !nextOfKinForm.get('country').hasError('required') }\\\">\\n                            <label class=\\\"form-control-label\\\">Country</label>\\n                            <select formControlName=\\\"country\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.countryID\\\">\\n                                    {{country.countryCode}}\\n                                </option>\\n                            </select>\\n                            <small class=\\\"text-danger\\\"\\n                                   *ngIf=\\\"step.hasError && nextOfKinForm.get('country').hasError('required')\\\">Country is\\n                                required\\n                            </small>\\n                        </div>\\n\\n\\n                    </form>\\n\\n                </div>\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        <button class=\\\"btn btn-primary pull-left\\\" (click)=\\\"prev()\\\"><i\\n                                class=\\\"fa fa-chevron-left arrow\\\"></i>&nbsp; Prev Step\\n                        </button>\\n                        <button *ngIf=\\\"!steps[steps.length-1].active\\\" class=\\\"btn btn-primary pull-right\\\"\\n                                (click)=\\\"next()\\\">Next Step &nbsp;<i class=\\\"fa fa-chevron-right arrow\\\"></i></button>\\n                        <button *ngIf=\\\"steps[steps.length-1].active\\\" class=\\\"btn btn-primary pull-right\\\"\\n                                (click)=\\\"confirm()\\\">Confirm &nbsp;<i class=\\\"fa fa-check arrow\\\"></i></button>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\" *ngIf=\\\"showInvoice\\\" [formGroup]=\\\"invoiceFrom\\\" >\\n    <div class=\\\"col-lg-12 mb-4\\\" id=\\\"section-to-print\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Invoice Details</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                </div>\\n            </div>\\n          <!--  <div class=\\\"card-body pt-0 widget-body\\\">\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"invoiceNo\\\">Invoice No</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"invoiceNo\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"invoiceDate\\\">Invoice Date</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"invoiceDate\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"clientName\\\">Client Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"clientName\\\" placeholder=\\\"\\\" disabled >\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"documentNumber\\\">Id/Passport Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"documentNumber\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"admissionNumber\\\">Admission Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"admissionNumber\\\" placeholder=\\\"\\\" disabled>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-lg-12 mb-4\\\">\\n                    <div widget class=\\\"card border-0 box-shadow\\\">\\n                        <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                            <h5 class=\\\"mb-0\\\">Services</h5>\\n                            <div class=\\\"widget-controls\\\">\\n                                <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                                <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"card-body pt-0 widget-body\\\">\\n                            <table class=\\\"table table-bordered\\\">\\n                                <thead>\\n                                <tr>\\n                                    <th>S.No</th>\\n                                    <th>Service Nme</th>\\n                                    <th>Price (ksh)</th>\\n                                    <th>Fridge</th>\\n                                    <th>Fridge Price (ksh)</th>\\n                                    <th>Total (ksh)</th>\\n                                </tr>\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let invoice of invoiceServices\\\">\\n                                    <th scope=\\\"row\\\">1</th>\\n                                    <td>{{invoice.serviceName}}</td>\\n                                    <td>{{invoice.price}}</td>\\n                                    <td>{{invoice.fridgeName}}</td>\\n                                    <td>{{invoice.fridgePrice}}</td>\\n                                    <td>  {{invoice.invoiceTotal}}</td>\\n                                </tr>\\n\\n\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>-->\\n            <div class=\\\"card\\\" >\\n                <div class=\\\"card-body p-50\\\">\\n                    <div class=\\\"invoice\\\">\\n                        <div class=\\\"d-md-flex justify-content-between align-items-center\\\">\\n                            <h2 class=\\\"font-weight-800 d-flex align-items-center\\\">\\n                                <img class=\\\"m-r-20\\\" src=\\\"assets/media/image/logo-sm.png\\\" alt=\\\"image\\\">\\n                            </h2>\\n                            <h3 class=\\\"text-xs-left m-b-0\\\">Invoice</h3>\\n                        </div>\\n                        <hr class=\\\"m-t-b-50\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <p >\\n                                    <b>Invoice to</b>\\n                                </p>\\n                                <p >\\n                                    <b>Client Name</b>\\n                                </p>\\n                                <p>Address<br>Mobile Number<br>Email</p>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                               <!-- <p class=\\\"text-right\\\">\\n                                    <b>Invoice to</b>\\n                                </p>-->\\n                                <!--<p class=\\\"text-right\\\">Gaala &amp; Sons,<br> C-201, Beykoz-34800,<br> Canada, K1A 0G9.</p>-->\\n                            </div>\\n                        </div>\\n                        <div class=\\\"table-responsive\\\" tabindex=\\\"1\\\" style=\\\"overflow: hidden; outline: none; touch-action: none;\\\">\\n                            <table class=\\\"table m-t-b-50\\\">\\n                                <thead>\\n                                <tr class=\\\"bg-dark text-white\\\">\\n                                    <th>S.No</th>\\n                                    <th>Service Nme</th>\\n                                    <th>Price (ksh)</th>\\n                                    <th>Fridge</th>\\n                                    <th>Fridge Price (ksh)</th>\\n                                    <th>Total (ksh)</th>\\n                                </tr>\\n\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let invoice of invoiceServices\\\">\\n                                    <th scope=\\\"row\\\">1</th>\\n                                    <td>{{invoice.serviceName}}</td>\\n                                    <td>{{invoice.price}}</td>\\n                                    <td>{{invoice.fridgeName}}</td>\\n                                    <td>{{invoice.fridgePrice}}</td>\\n                                    <td>  {{invoice.invoiceTotal}}</td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        <div class=\\\"text-right\\\">\\n                            <h4 class=\\\"font-weight-800\\\">Total : </h4>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"text-right d-print-none\\\">\\n                        <hr class=\\\"m-t-b-50\\\">\\n\\n                        <a href=\\\"javascript:window.print()\\\" class=\\\"btn btn-success m-l-5\\\">\\n                            <i class=\\\"fa fa-print m-r-5\\\"></i> Print\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancelInvoice()\\\">Cancel Invoice</button>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\"","export default \"<input type=\\\"file\\\" (change)=\\\"fileChange(input)\\\" #input class=\\\"img-upload-btn\\\"/>\\n\\n<button class=\\\"btn btn-info btn-block rounded-0\\\" type=\\\"button\\\">\\n     <span *ngIf=\\\"!image\\\"><i class=\\\"fa fa-upload\\\"></i> Select Image... </span>\\n     <span *ngIf=\\\"image\\\"><i class=\\\"fa fa-refresh\\\"></i> Change Image... </span>\\n</button>\\n\\n<div class=\\\"image-wrapper\\\">\\n    <i *ngIf=\\\"image\\\" class=\\\"fa fa-times delete-img\\\" (click)=\\\"removeImage()\\\"></i>\\n    <img [attr.src]=\\\"image\\\" *ngIf=\\\"image\\\" width=\\\"100%\\\">\\n    <img src=\\\"assets/img/app/no-image.png\\\" *ngIf=\\\"!image\\\" width=\\\"100%\\\">\\n</div>\\n\\n\"","export default \" <ckeditor\\n    [(ngModel)]=\\\"ckeditorContent\\\"\\n    [config]=\\\"config\\\"\\n    (change)=\\\"onChange($event)\\\"\\n    (ready)=\\\"onReady($event)\\\"\\n    (focus)=\\\"onFocus($event)\\\"\\n    (blur)=\\\"onBlur($event)\\\"\\n    debounce=\\\"500\\\">\\n  </ckeditor>\"","export default \"<div class=\\\"row mb-1\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search fridge by Name...\\\" class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"openModal(modalContent, null)\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>CODE</th>\\n                    <th>NAME</th>\\n                    <th>SERVICE</th>\\n                    <th>STATUS</th>\\n                    <th>Action</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let fridge of fridges | paginate: { itemsPerPage: 6, currentPage: p }\\\">\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.code}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.name}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{fridge.service.serviceName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">\\n                        <span *ngIf=\\\"fridge.status != 1\\\" class=\\\"badge badge-success mr-1\\\">Available</span>\\n                        <span *ngIf=\\\"fridge.status === 1\\\" class=\\\"badge badge-danger mr-1\\\">Occupied</span>\\n                    </td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, client)\\\"><i class=\\\"fa fa-eye\\\"></i></button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\"></h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmClient\\\" (ngSubmit)=\\\"onSubmit(frmClient.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Full Name</label>\\n                                        <input formControlName=\\\"fullName\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Display Name</label>\\n                                        <input formControlName=\\\"displayName\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">ID/PP No</label>\\n                                        <input formControlName=\\\"documentNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <label class=\\\"form-control-label\\\">Gender</label>\\n                                    <select formControlName=\\\"gender\\\" class=\\\"form-control\\\">\\n                                        <option>Male</option>\\n                                        <option>Female</option>\\n                                    </select>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Country</label>\\n                                        <select formControlName=\\\"country\\\" class=\\\"form-control\\\">\\n                                            <option *ngFor=\\\"let country of countries\\\" [selected]=\\\"client.country && client.country.countryID==country.countryID\\\" [value]=\\\"country.countryID\\\">{{country.countryCode}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">County</label>\\n                                        <select formControlName=\\\"county\\\" class=\\\"form-control\\\">\\n                                            <option *ngFor=\\\"let county of counties\\\" [selected]=\\\"client.county && client.county.countyID==county.countyID\\\" [value]=\\\"county.countyID\\\">{{county.countyName}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Email</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope-o\\\"></i></span>\\n                                            </div>\\n                                            <input formControlName=\\\"email\\\" class=\\\"form-control\\\" type=\\\"email\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Mobile Number</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone\\\"></i></span>\\n                                            </div>\\n                                            <input formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Address</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker\\\"></i></span>\\n                                            </div>\\n                                            <input formControlName=\\\"address\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmClient.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span *ngIf=\\\"!client.id\\\">Add</span><span *ngIf=\\\"client.id\\\">Update</span></button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","export default \"\\n<div class=\\\"row\\\" [hidden]=\\\"showList\\\">\\n    <div class=\\\"col-lg-12 mb-4\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Invoice Details</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body pt-0 widget-body\\\">\\n                <form [formGroup]=\\\"frmInvoice\\\" (ngSubmit)=\\\"onSubmitInvoice(frmInvoice.value)\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\"\\n                             [ngClass]=\\\"{'has-danger' : frmInvoice.get('clientId').hasError('required'), 'has-success' : !frmInvoice.get('clientId').hasError('required') }\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-control-label\\\">Select Clients</label>\\n                                <select formControlName=\\\"clientId\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{'form-control-danger' :  frmInvoice.get('clientId').hasError('required'), 'form-control-success' :  !frmInvoice.get('clientId').hasError('required') }\\\">\\n                                    <option *ngFor=\\\"let client of clients\\\" [selected]=\\\"client.id==clientId\\\"\\n                                            [value]=\\\"client.id\\\">{{client.fullName}}\\n                                    </option>\\n                                </select>\\n                                <small class=\\\"text-danger\\\"\\n                                       *ngIf=\\\"frmInvoice.get('clientId').hasError('required')\\\">Client is\\n                                    required\\n                                </small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-lg-12 mb-4\\\">\\n                        <div widget class=\\\"card border-0 box-shadow\\\">\\n                            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                                <h5 class=\\\"mb-0\\\">Service Details</h5>\\n                                <div class=\\\"widget-controls\\\">\\n                                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i\\n                                            class=\\\"fa fa-chevron-down\\\"></i></a>\\n                                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i\\n                                            class=\\\"fa fa-chevron-up\\\"></i></a>\\n                                </div>\\n\\n\\n                            </div>\\n                            <div class=\\\"card-body pt-0 widget-body\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"openAddServiceModal(modalServiceContent)\\\">Add Items\\n                                    &nbsp;<i class=\\\"fa fa-plus \\\"></i>\\n                                </button>\\n                                <table class=\\\"table table-bordered\\\" style=\\\"margin-top: 40px;\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>#</th>\\n                                        <th>Service Name</th>\\n                                        <th>Unit</th>\\n                                        <th>Quantity</th>\\n                                        <th>Price (Ksh)</th>\\n                                        <th>Total Amount</th>\\n\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr *ngFor=\\\"let invoiceService of invoiceServices\\\">\\n                                        <td>{{invoiceService.service}}</td>\\n                                        <td>{{invoiceService.serviceName}}</td>\\n                                        <td>{{invoiceService.unit}}</td>\\n                                        <td>{{invoiceService.quantity}}</td>\\n                                        <td>{{invoiceService.price}}</td>\\n                                        <td>{{invoiceService.totalAmount}}</td>\\n\\n                                    </tr>\\n                                    <tr>\\n                                        <td colspan=\\\"5\\\" style=\\\"font-size: medium; font-weight: bold;text-align: right\\\">Total</td>\\n                                        <td colspan=\\\"6\\\" >{{getSum()}}</td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row justify-content-center\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\">Submit</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n<div class=\\\"row\\\" [hidden]=\\\"showInvoice\\\" [formGroup]=\\\"frmInvoice\\\" >\\n    <div class=\\\"col-lg-12 mb-4\\\" id=\\\"section-to-print\\\">\\n        <div widget class=\\\"card border-0 box-shadow\\\">\\n            <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                <h5 class=\\\"mb-0\\\">Invoice Details</h5>\\n                <div class=\\\"widget-controls\\\">\\n                    <a data-widgster=\\\"expand\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-down\\\"></i></a>\\n                    <a data-widgster=\\\"collapse\\\" href=\\\"#\\\" class=\\\"transition\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\n                </div>\\n            </div>\\n            <div class=\\\"card\\\" >\\n                <div class=\\\"card-body p-50\\\">\\n                    <div class=\\\"invoice\\\">\\n                        <div class=\\\"d-md-flex justify-content-between align-items-center\\\">\\n                            <h2 class=\\\"font-weight-800 d-flex align-items-center\\\">\\n\\n                            </h2>\\n                            <h3 class=\\\"text-xs-left m-b-0\\\">Invoice</h3>\\n                        </div>\\n                        <hr class=\\\"m-t-b-50\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <p >\\n                                    <b>Invoice to</b>\\n                                </p>\\n                                <p >\\n                                    <b>Client Name</b>\\n                                </p>\\n                                <p>Address<br>Mobile Number<br>Email</p>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <!-- <p class=\\\"text-right\\\">\\n                                     <b>Invoice to</b>\\n                                 </p>-->\\n                                <!--<p class=\\\"text-right\\\">Gaala &amp; Sons,<br> C-201, Beykoz-34800,<br> Canada, K1A 0G9.</p>-->\\n                            </div>\\n                        </div>\\n                        <div class=\\\"table-responsive\\\" tabindex=\\\"1\\\" style=\\\"overflow: hidden; outline: none; touch-action: none;\\\">\\n                            <table class=\\\"table m-t-b-50\\\">\\n                                <thead>\\n                                <tr class=\\\"bg-dark text-white\\\">\\n                                    <th>S.No</th>\\n                                    <th>Service Nme</th>\\n                                    <th>Unit</th>\\n                                    <th>Quantity</th>\\n                                    <th>Price</th>\\n                                    <th>Total Amount (ksh)</th>\\n                                </tr>\\n\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let invoice of invoiceServices\\\">\\n                                    <th scope=\\\"row\\\">1</th>\\n                                    <td>{{invoice.serviceName}}</td>\\n                                    <td>{{invoice.unitName}}</td>\\n                                    <td>{{invoice.quantity}}</td>\\n                                    <td>{{invoice.price}}</td>\\n                                    <td>  {{invoice.totalAmount}}</td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        <div class=\\\"text-right\\\">\\n                            <h4 class=\\\"font-weight-800\\\">Total :  </h4>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"text-right d-print-none\\\">\\n                        <hr class=\\\"m-t-b-50\\\">\\n\\n                        <a href=\\\"javascript:window.print()\\\" class=\\\"btn btn-success m-l-5\\\">\\n                            <i class=\\\"fa fa-print m-r-5\\\"></i> Print\\n                        </a>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancelInvoice()\\\">Cancel Invoice</button>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalServiceContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\"></h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmService\\\" (ngSubmit)=\\\"onSubmit(frmService.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{'has-danger' : frmService.get('service').hasError('required'),'has-success' : !frmService.get('service').hasError('required') }\\\">\\n                                        <label class=\\\"form-control-label\\\">Service</label>\\n                                        <select formControlName=\\\"service\\\" class=\\\"form-control\\\" [ngModel]=\\\"service\\\" (ngModelChange)=\\\"getPriceDetails($event)\\\">\\n                                            <option *ngFor=\\\"let service of services\\\" [ngValue]=\\\"service\\\">\\n                                                {{service.serviceName}}\\n                                            </option>\\n                                        </select>\\n                                        <small class=\\\"text-danger\\\"\\n                                               *ngIf=\\\"frmService.get('service').hasError('required')\\\">Service is\\n                                            required\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Quantity</label>\\n                                        <input formControlName=\\\"quantity\\\" class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"1\\\" required>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Price</label>\\n                                        <input formControlName=\\\"price\\\" class=\\\"form-control\\\" type=\\\"text\\\" readonly value= \\\"{{service.price}}\\\" />\\n                                    </div>\\n                                </div>\\n\\n\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmService.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span>Add</span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                    </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </div>\\n</ng-template>\\n\"","export default \"<div class=\\\"col-8 offset-2\\\">\\n    <input type=\\\"file\\\" multiple (change)=\\\"fileChange(input)\\\" #input class=\\\"m-img-upload-btn\\\"/>\\n    <button class=\\\"btn btn-success btn-block\\\" type=\\\"button\\\">\\n        <i class=\\\"fa fa-upload\\\"></i> Choose images...\\n    </button>\\n</div>\\n\\n<div class=\\\"card images-container\\\">\\n    <div *ngFor=\\\"let image of images; let i=index;\\\" class=\\\"m-image-wrapper\\\">\\n        <i class=\\\"fa fa-times m-delete-img\\\" (click)=\\\"removeImage(i)\\\"></i>\\n        <img [attr.src]=\\\"image\\\"> \\n    </div> \\n</div>\\n\"","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Client, User} from './customer.model';\nimport {Country} from '../shared/models/country.model';\nimport {County} from '../shared/models/county.model';\nimport {environment} from '../../../environments/environment';\nimport {Branch} from '../shared/models/branch.model';\n\n@Injectable()\nexport class CustomerService {\n    constructor(public http: HttpClient) { }\n\n    getClients(): Observable<Client[]> {\n        return this.http.get<Client[]>(environment.BASE_URL + 'client/clients');\n    }\n\n    addClient(client: Client) {\n        return this.http.post(environment.BASE_URL + 'client/registration', client);\n    }\n\n    updateClient(client: Client) {\n        return this.http.post(environment.BASE_URL  + 'client/registration', client);\n    }\n\n    deleteClient(id: number) {\n        return this.http.delete(environment.BASE_URL + '/' + id);\n    }\n    getCountries(): Observable<Country[]> {\n        return this.http.get<Country[]>(environment.BASE_URL + 'common/countries');\n    }\n\n    getCounties(): Observable<County[]> {\n        return this.http.get<County[]>(environment.BASE_URL + 'common/counties');\n    }\n\n    getBranches(): Observable<Branch[]> {\n        return this.http.get<Branch[]>(environment.BASE_URL + 'common/branches/list');\n    }\n}\n","import {Product} from '../product/product.model';\nimport {Service} from '../../services/service.model';\n\nexport class Bookinginvoice {\n    invoiceNo: string;\n    clientId: number;\n    orderDate: string;\n    products: Product[];\n    services: Service[];\n}","export default \".step .step-content {\\n  background: #b9b9b9;\\n  height: 40px;\\n  font-size: 1.5rem;\\n}\\n.step .step-content .step-name {\\n  font-size: 14px;\\n}\\n.step .step-content.confirmed {\\n  background-color: #4BAE4F !important;\\n}\\n.confirmed-content .fa-check {\\n  font-size: 120px;\\n}\\n.confirmed-content .fa-print {\\n  font-size: 24px;\\n}\\n@media print {\\n  body * {\\n    visibility: hidden;\\n  }\\n\\n  #section-to-print, #section-to-print * {\\n    visibility: visible;\\n  }\\n\\n  #section-to-print {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvYWRtaXNzaW9uL0E6XFxpJm1fY29kZV90ZXN0XFxjb2RlX3Rlc3Qvc3JjXFxhcHBcXHBhZ2VzXFxtb3J0dWFyeVxcYWRtaXNzaW9uXFxhZG1pc3Npb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2FkbWlzc2lvbi9hZG1pc3Npb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQ0FSO0FEQ1E7RUFDSSxlQUFBO0FDQ1o7QURDUTtFQUNJLG9DQUFBO0FDQ1o7QURLSTtFQUNJLGdCQUFBO0FDRlI7QURJSTtFQUNJLGVBQUE7QUNGUjtBREtBO0VBQ0k7SUFDSSxrQkFBQTtFQ0ZOOztFREtFO0lBQ0ksbUJBQUE7RUNGTjs7RURLRTtJQUNJLGtCQUFBO0lBQ0EsT0FBQTtJQUNBLE1BQUE7RUNGTjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvYWRtaXNzaW9uL2FkbWlzc2lvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdGVwe1xuICAgIC5zdGVwLWNvbnRlbnR7XG4gICAgICAgIGJhY2tncm91bmQ6ICNiOWI5Yjk7XG4gICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICAgIC5zdGVwLW5hbWV7XG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIH1cbiAgICAgICAgJi5jb25maXJtZWR7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNEJBRTRGICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jb25maXJtZWQtY29udGVudHtcbiAgICAuZmEtY2hlY2t7XG4gICAgICAgIGZvbnQtc2l6ZTogMTIwcHg7ICAgICAgICBcbiAgICB9XG4gICAgLmZhLXByaW50e1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgfVxufVxuQG1lZGlhIHByaW50IHtcbiAgICBib2R5ICoge1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgIC8vdHJhbnNmb3JtOiBzY2FsZSguNyk7XG4gICAgfVxuICAgICNzZWN0aW9uLXRvLXByaW50LCAjc2VjdGlvbi10by1wcmludCAqIHtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcblxuICAgIH1cbiAgICAjc2VjdGlvbi10by1wcmludCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgdG9wOiAwO1xuICAgIH1cbiAgICAvL3RhYmxlIHtwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7fVxufVxuXG4iLCIuc3RlcCAuc3RlcC1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogI2I5YjliOTtcbiAgaGVpZ2h0OiA0MHB4O1xuICBmb250LXNpemU6IDEuNXJlbTtcbn1cbi5zdGVwIC5zdGVwLWNvbnRlbnQgLnN0ZXAtbmFtZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5zdGVwIC5zdGVwLWNvbnRlbnQuY29uZmlybWVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRCQUU0RiAhaW1wb3J0YW50O1xufVxuXG4uY29uZmlybWVkLWNvbnRlbnQgLmZhLWNoZWNrIHtcbiAgZm9udC1zaXplOiAxMjBweDtcbn1cbi5jb25maXJtZWQtY29udGVudCAuZmEtcHJpbnQge1xuICBmb250LXNpemU6IDI0cHg7XG59XG5cbkBtZWRpYSBwcmludCB7XG4gIGJvZHkgKiB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB9XG5cbiAgI3NlY3Rpb24tdG8tcHJpbnQsICNzZWN0aW9uLXRvLXByaW50ICoge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIH1cblxuICAjc2VjdGlvbi10by1wcmludCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICB9XG59Il19 */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {CustomValidators} from 'ng2-validation';\nimport {NgbDateParserFormatter, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport {CustomerService} from '../../customer/customer.service';\nimport {Client} from '../../customer/customer.model';\nimport {Country} from '../../shared/models/country.model';\nimport {County} from '../../shared/models/county.model';\nimport {Admission} from './admission.model';\nimport {AdmissionService} from './admission.service';\nimport {Router} from '@angular/router';\nimport {Service} from '../../services/service.model';\nimport {Nextofkindetails} from './nextofkindetails.model';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {MileleService} from '../../services/service.service';\nimport {tokenReference} from '@angular/compiler';\n\n\n@Component({\n    selector: 'app-admission',\n    templateUrl: './admission.component.html',\n    styleUrls: ['./admission.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [CustomerService, AdmissionService, MileleService]\n})\nexport class AdmissionComponent implements OnInit {\n    public clients: Client[];\n    nextOfKin: Nextofkindetails [] = [];\n    public admission: Admission;\n    public admissions: Admission[];\n    public services: Service[];\n    public fridges: Fridge[];\n    public counties: County[];\n    public countries: Country[];\n\n\n    public steps: any[];\n    public invoiceServices: any[] = [];\n    public clientForm: FormGroup;\n    public personalForm: FormGroup;\n    public nextOfKinForm: FormGroup;\n    public invoiceFrom: FormGroup;\n    public details: any = {};\n    public confirmed: boolean;\n    showDetails: Boolean = false; // hidden by default\n    showList: Boolean = true;\n    showInvoice: Boolean = false;\n\n    constructor(private formBuilder: FormBuilder, private clientService: CustomerService, private mileleService: MileleService,\n                private admissionService: AdmissionService, private router: Router, private toastrService: ToastrService) {\n    }\n    // Datepicker in a popup\n    public modelPopup: NgbDateStruct = {year: new Date().getFullYear(), month: new Date().getMonth() + 1, day: new Date().getDate() - 3};\n    private dayTypes: ({ id: number; dayType: string })[];\n    ngOnInit() {\n\n        this.dayTypes = [\n            {id: 1, dayType: 'WeekDay'},\n            {id: 2, dayType: 'WeekEnd'}\n        ];\n        this.getAdmissions();\n        this.getClients();\n        this.getCountries();\n        this.getCounties();\n        this.getServices();\n\n        this.steps = [\n            {name: 'Client Details', icon: 'fa-lock', active: true, valid: false, hasError: false},\n            {name: 'Deceased Details', icon: 'fa-user', active: false, valid: false, hasError: false},\n            {name: 'Next of Kin', icon: 'fa-credit-card', active: false, valid: false, hasError: false},\n            {name: 'Confirm Details & Submit', icon: 'fa-check-square-o', active: false, valid: false, hasError: false}\n        ];\n\n        this.clientForm = this.formBuilder.group({\n            clientId: ['', Validators.required]\n        });\n\n        this.personalForm = this.formBuilder.group({\n            'causeOfDeath': ['', Validators.required],\n            'dateOfBirth': ['', Validators.required],\n            'dateOfDeath': ['', Validators.required],\n            'gender': ['', Validators.required],\n            'description': null,\n            'documentNumber': ['', Validators.required],\n            'fullName': ['', Validators.required],\n            'imageId': null,\n            country: ['', Validators.required],\n            county: ['', Validators.required],\n            fridge: ['', Validators.required],\n            service: ['', Validators.required]\n        });\n\n        this.nextOfKinForm = this.formBuilder.group({\n            'address': [''],\n            'admissionId': null,\n            country: 0,\n            county: 0,\n            'documentNumber': ['', Validators.required],\n            'email': [''],\n            'fullName': ['', Validators.required],\n            'gender': [''],\n            'id': null,\n            'imageId': [''],\n            'mobileNumber': ['']\n        });\n\n        this.invoiceFrom = this.formBuilder.group({\n            'invoiceNo': null,\n            'invoiceDate': null,\n            'clientName': null,\n            'documentNumber': null,\n            'serviceName': null,\n            'price': null,\n            'fridgeName': null,\n            'fridgePrice': null,\n            'total': null\n        });\n    }\n\n    toggleShow() {\n\n        this.showList = false;\n        this.showDetails = true;\n\n    }\n\n    showClientMaster(): void {\n        this.router.navigateByUrl('/customer');\n    }\n\n    // Datepicker in a popup\n\n    public getClients(): void {\n        this.clientService.getClients().subscribe(clients =>\n            this.clients = clients\n        );\n    }\n\n    public getCountries(): void {\n        this.clientService.getCountries().subscribe(countries =>\n            this.countries = countries\n        );\n    }\n\n    public getCounties(): void {\n        this.clientService.getCounties().subscribe(counties =>\n            this.counties = counties\n        );\n    }\n\n    public getServices(): void {\n        this.mileleService.getServices().subscribe(services =>\n            this.services = services\n        );\n    }\n\n    public getFridgesByServiceId(id: number): void {\n        this.admissionService.getFridgesByServiceId(id).subscribe(fridges =>\n            this.fridges = fridges\n        );\n    }\n\n    public getAdmissions(): void {\n        this.admissionService.getAdmissions().subscribe(admissions =>\n            this.admissions = admissions\n        );\n    }\n\n    public next() {\n        const clientForm = this.clientForm;\n        const personalForm = this.personalForm;\n        const nextOfKinForm = this.nextOfKinForm;\n\n        if (this.steps[this.steps.length - 1].active) {\n            return false;\n        }\n\n        this.steps.some(function (step, index, steps) {\n            if (index < steps.length - 1) {\n                if (step.active) {\n                    // tslint:disable-next-line:triple-equals\n                    if (step.name === 'Client Details') {\n                        if (clientForm.valid) {\n                            step.active = false;\n                            step.valid = true;\n                            steps[index + 1].active = true;\n                            return true;\n                        } else {\n                            step.hasError = true;\n                        }\n                    }\n                    if (step.name === 'Deceased Details') {\n                        if (personalForm.valid) {\n                            step.active = false;\n                            step.valid = true;\n                            steps[index + 1].active = true;\n                            return true;\n                        } else {\n                            step.hasError = true;\n                        }\n                    }\n                    if (step.name === 'Next of Kin') {\n                        if (nextOfKinForm.valid) {\n                            step.active = false;\n                            step.valid = true;\n                            steps[index + 1].active = true;\n                            return true;\n                        } else {\n                            step.hasError = true;\n                        }\n                    }\n                }\n            }\n        });\n\n\n        console.log(this.details);\n    }\n\n    public prev() {\n        if (this.steps[0].active) {\n            return false;\n        }\n        this.steps.some(function (step, index, steps) {\n            if (index !== 0) {\n                if (step.active) {\n                    step.active = false;\n                    steps[index - 1].active = true;\n                    return true;\n                }\n            }\n        });\n    }\n\n    public addAdmission(admission: Admission) {\n        // console.log(admission);\n        this.admissionService.addAdmission(admission).subscribe(admission => {\n            console.log(admission);\n            this.getAdmissions();\n        });\n    }\n\n    public confirm() {\n        // this.steps.forEach(step => step.valid = true);\n        // this.confirmed = true;\n        // if (this.frmService.valid) {\n        if (this.details.id) {\n            // this.updateAdmission(this.details);\n        } else {\n            this.details.clientId = this.clientForm.value.clientId;\n            this.details.fullName = this.personalForm.value.fullName;\n            this.details.documentNumber = this.personalForm.value.documentNumber;\n            this.details.gender = this.personalForm.value.gender;\n            this.details.description = this.personalForm.value.description;\n            this.details.country = this.personalForm.value.country;\n            this.details.county = this.personalForm.value.county;\n            let dtb = this.personalForm.value.dateOfBirth;\n            let tempdtb = new Date(dtb.year, dtb.month-1, dtb.day);\n            this.details.dateOfBirth = tempdtb.toLocaleString().split(',')[0];\n            //this.details.dateOfBirth = this.personalForm.value.dateOfBirth;\n            this.details.address = 'na';\n            this.details.mobileNumber = '000';\n            this.details.causeOfDeath = this.personalForm.value.causeOfDeath;\n            let dtd=this.personalForm.value.dateOfDeath;\n            let tempdtd = new Date(dtd.year, dtd.month-1, dtd.day);\n            this.details.dateOfBirth = tempdtd.toLocaleString().split(',')[0];\n            //this.details.dateOfDeath = this.personalForm.value.dateOfDeath;\n            this.details.fridgeId = this.personalForm.value.fridge;\n            this.details.serviceId = this.personalForm.value.service;\n            this.nextOfKin.push(this.nextOfKinForm.value);\n            this.details.nextOfKinDetails = this.nextOfKin;\n            this.details.description = this.personalForm.value.description;\n            this.addAdmission(this.details);\n            this.showList = true;\n            this.showDetails = false;\n            this.clientForm.reset();\n            this.personalForm.reset();\n            this.nextOfKinForm.reset();\n            this.invoiceFrom.reset();\n            this.toastrService.success('Saved Successfully!');\n        }\n\n        //  }\n    }\n\n\n    public generateInvoice(admission: Admission) {\n        this.showInvoice = true;\n        this.showList = false;\n        /*  this.invoiceServices.push({'serviceName': admission.serviceName, 'price': 100,\n              'fridgeName': admission.fridgeName, 'fridgePrice': 200,'invoiceTotal': 300});*/\n        this.invoiceServices.push({\n            'serviceName': 'Premium', 'price': 100,\n            'fridgeName': 'VM0001', 'fridgePrice': 200, 'invoiceTotal': 300\n        });\n    }\n\n    public cancelInvoice() {\n        this.showList = true;\n        this.showInvoice = false;\n        this.invoiceServices = [];\n    }\n\n    public editInvoice(admission: Admission) {\n        this.showList = false;\n        this.showDetails = true;\n        /*  this.clientForm.controls.clientId.setValue({\n              clientId: admission.customer\n          });*/\n        this.clientForm.controls['clientId'].setValue(admission.customer);\n        this.personalForm.controls['fullName'].setValue(admission.fullName);\n        this.personalForm.controls['documentNumber'].setValue(admission.documentNumber);\n        this.personalForm.controls['gender'].setValue(admission.gender);\n        this.personalForm.controls['dateOfBirth'].setValue(admission.dateOfBirth);\n        this.personalForm.controls['county'].setValue(admission.county);\n        this.personalForm.controls['country'].setValue(admission.country);\n        this.personalForm.controls['causeOfDeath'].setValue(admission.causeOfDeath);\n        this.personalForm.controls['dateOfDeath'].setValue(admission.dateOfDeath);\n        this.personalForm.controls['service'].setValue(admission.service);\n\n        this.getFridgesByServiceId(admission.service);\n        this.personalForm.controls['fridge'].setValue(admission.fridge);\n        for (let i=0; i< admission.nextOfKins.length;i++){\n            this.nextOfKinForm.controls['fullName'].setValue(admission.nextOfKins[i].fullName);\n            this.nextOfKinForm.controls['documentNumber'].setValue(admission.nextOfKins[i].documentNumber);\n            this.nextOfKinForm.controls['gender'].setValue(admission.nextOfKins[i].gender);\n            this.nextOfKinForm.controls['county'].setValue(admission.nextOfKins[i].county);\n            this.nextOfKinForm.controls['country'].setValue(admission.nextOfKins[i].country);\n        }\n\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Admission} from './admission.model';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable()\nexport class AdmissionService {\n    constructor(public http: HttpClient) { }\n\n    getAdmissions(): Observable<Admission[]> {\n        return this.http.get<Admission[]>(environment.BASE_URL + 'morg/admissions');\n    }\n    addAdmission(admission: Admission) {\n        return this.http.post(environment.BASE_URL + 'morg/admission', admission);\n    }\n\n    getFridgesByServiceId(id: number): Observable<Fridge[]> {\n        return this.http.get<Fridge[]>(environment.BASE_URL + 'common/fridges?serviceId=' + id);\n    }\n\n    handleError(error) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n        } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","export default \".img-upload-btn {\\n  position: absolute;\\n  padding: 0;\\n  width: calc(100% - 30px);\\n  height: 38px;\\n  opacity: 0;\\n}\\n\\n.image-wrapper {\\n  position: relative;\\n}\\n\\n.image-wrapper .delete-img {\\n  position: absolute;\\n  top: 8px;\\n  right: 10px;\\n  border: 2px solid #fff;\\n  color: #fff;\\n  padding: 3px 5px;\\n  border-radius: 50%;\\n  visibility: hidden;\\n  cursor: pointer;\\n}\\n\\n.image-wrapper:hover .delete-img {\\n  visibility: visible;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvYWRtaXNzaW9uL2ltYWdlLXVwbG9hZGVyL0E6XFxpJm1fY29kZV90ZXN0XFxjb2RlX3Rlc3Qvc3JjXFxhcHBcXHBhZ2VzXFxtb3J0dWFyeVxcYWRtaXNzaW9uXFxpbWFnZS11cGxvYWRlclxcaW1hZ2UtdXBsb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2FkbWlzc2lvbi9pbWFnZS11cGxvYWRlci9pbWFnZS11cGxvYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLHdCQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0o7O0FEQUk7RUFDSSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQ0VSOztBREFJO0VBQ0ksbUJBQUE7QUNFUiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2FkbWlzc2lvbi9pbWFnZS11cGxvYWRlci9pbWFnZS11cGxvYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWctdXBsb2FkLWJ0bntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcGFkZGluZzogMDtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMzBweCk7XG4gICAgaGVpZ2h0OiAzOHB4O1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5pbWFnZS13cmFwcGVye1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAuZGVsZXRlLWltZ3tcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDhweDtcbiAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmY7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAmOmhvdmVyIC5kZWxldGUtaW1ne1xuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgIH1cbn1cbiIsIi5pbWctdXBsb2FkLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xuICBoZWlnaHQ6IDM4cHg7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5pbWFnZS13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmltYWdlLXdyYXBwZXIgLmRlbGV0ZS1pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogOHB4O1xuICByaWdodDogMTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDNweCA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uaW1hZ2Utd3JhcHBlcjpob3ZlciAuZGVsZXRlLWltZyB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59Il19 */\"","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-image-uploader',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './image-uploader.component.html',\n  styleUrls: ['./image-uploader.component.scss']\n})\nexport class ImageUploaderComponent {\n    public image:any;\n\n    fileChange(input){\n        const reader = new FileReader();\n        if (input.files.length) {\n            const file = input.files[0];\n            reader.onload = () => {\n                this.image = reader.result;\n            }\n            reader.readAsDataURL(file);\n        }\n    }\n\n    removeImage(): void{\n        this.image = '';\n    }\n\n}\n\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class EditorComponent{\n  public ckeditorContent:string;\n  public config:any;\n\n  constructor() {\n    this.ckeditorContent = '<div>Hey we are testing CKEditor</div>';\n    this.config = {\n        uiColor: '#F0F3F4',\n        height: '350',\n        extraPlugins: 'divarea'\n    };\n  }\n\n  onChange(event: any) {\n    setTimeout(() => {\n      this.ckeditorContent = event;\n    });\n  }\n  onReady(event: any) { }\n  onFocus(event: any) { \n      console.log(\"editor is focused\");\n  }\n  onBlur(event: any) {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable()\nexport class FridgeService {\n    constructor(public http: HttpClient) { }\n    getFridges(): Observable<Fridge[]> {\n        return this.http.get<Fridge[]>(environment.BASE_URL + 'common/fridges/list');\n    }\n    handleError(error) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n        } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {Fridge} from '../../shared/models/fridge.model';\nimport {FridgeService} from './fridge.service';\n\n@Component({\n  selector: 'app-layouts',\n  templateUrl: './fridgetracking.component.html',\n  encapsulation: ViewEncapsulation.None,\n    providers: [FridgeService]\n})\nexport class FridgetrackingComponent implements OnInit {\n    fridges: Fridge[];\n  constructor(private fridgeService: FridgeService) {\n  }\n\n  public sales = [{ name: 'TEST 1', value: 'VMILELE01' }];\n  public salesBgColor = { domain: ['#2F3E9E'] };\n\n  public likes = [{ name: 'TEST 2', value: 'VMILELE02' }];\n  public likesBgColor = { domain: ['#D22E2E'] };\n\n  public downloads = [{ name: 'EMPTY', value: 'VMILELE03' }];\n  public downloadsBgColor = { domain: ['#378D3B'] };\n\n  public profit = [{ name: 'EMPTY', value: 'VMILELE04'}];\n  public profitBgColor = { domain: ['#0096A6'] };\n\n  public messages = [{ name: 'EMPTY', value: 'VMILELE05' }];\n  public messagesBgColor = { domain: ['#606060'] };\n\n  public members = [{ name: 'EMPTY', value: 'VMILELE06' }];\n  public membersBgColor = { domain: ['#F47B00'] };\n\n\n  public infoLabelFormat(c): string {\n    switch (c.data.name) {\n      case 'sales':\n        return `<i class=\"fa fa-shopping-cart mr-2\"></i>${c.label}`;\n      case 'likes':\n        return `<i class=\"fa fa-thumbs-o-up mr-2\"></i>${c.label}`;\n      case 'downloads':\n        return `<i class=\"fa fa-download mr-2\"></i>${c.label}`;\n      case 'profit':\n        return `<i class=\"fa fa-money mr-2\"></i>${c.label}`;\n      case 'messages':\n        return `<i class=\"fa fa-comment-o mr-2\"></i>${c.label}`;\n      case 'members':\n        return `<i class=\"fa fa-user mr-2\"></i>${c.label}`;\n      default:\n        return c.label;\n    }\n  }\n\n  public infoValueFormat(c): string {\n    switch (c.data.extra ? c.data.extra.format : '') {\n      case 'currency':\n        return `\\$${Math.round(c.value).toLocaleString()}`;\n      case 'percent':\n        return `${Math.round(c.value * 100)}%`;\n      default:\n        return c.value.toLocaleString();\n    }\n  }\n\n  public onSelect(event) {\n    console.log(event);\n  }\n\n    public getFridges(): void {\n        this.fridgeService.getFridges().subscribe(fridges =>\n            this.fridges = fridges\n        );\n    }\n\n  ngOnInit() {\n    this.getFridges();\n  }\n\n}\n","export default \".custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  border-radius: 0.25rem;\\n  display: inline-block;\\n  width: 2rem;\\n}\\n\\n.custom-day:hover {\\n  background-color: #e6e6e6;\\n}\\n\\n.weekend {\\n  background-color: #f0ad4e;\\n  border-radius: 1rem;\\n  color: white;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\n.input-group-addon .fa-calendar {\\n  cursor: pointer;\\n}\\n\\n.star {\\n  position: relative;\\n  display: inline-block;\\n  font-size: 2rem;\\n  color: #d3d3d3;\\n}\\n\\n.full {\\n  color: red;\\n}\\n\\n.half {\\n  position: absolute;\\n  display: inline-block;\\n  overflow: hidden;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvQTpcXGkmbV9jb2RlX3Rlc3RcXGNvZGVfdGVzdC9zcmNcXGFwcFxccGFnZXNcXG1vcnR1YXJ5XFxpbnZvaWNlc1xcaW52b2ljZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvaW52b2ljZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQkFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtBQ0NKOztBRENBO0VBQ0kseUJBQUE7QUNFSjs7QURBQTtFQUNJLHlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FDR0o7O0FEREE7RUFDSSxhQUFBO0FDSUo7O0FEREE7RUFDSSxlQUFBO0FDSUo7O0FEQUE7RUFDSSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7QUNHSjs7QUREQTtFQUNJLFVBQUE7QUNJSjs7QURGQTtFQUNJLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxnQkFBQTtFQUNBLFVBQUE7QUNLSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2ludm9pY2VzL2ludm9pY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWRheSB7ICAgICAgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDJyZW07XG59XG4uY3VzdG9tLWRheTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbn1cbi53ZWVrZW5kIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBhZDRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgY29sb3I6IHdoaXRlO1xufVxuLmhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLmlucHV0LWdyb3VwLWFkZG9uIC5mYS1jYWxlbmRhcntcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG4gXG5cbi5zdGFyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICBcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGNvbG9yOiAjZDNkM2QzO1xufVxuLmZ1bGwge1xuICAgIGNvbG9yOiByZWQ7XG59XG4uaGFsZiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNvbG9yOiByZWQ7XG59IiwiLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDJyZW07XG59XG5cbi5jdXN0b20tZGF5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbn1cblxuLndlZWtlbmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBhZDRlO1xuICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaW5wdXQtZ3JvdXAtYWRkb24gLmZhLWNhbGVuZGFyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc3RhciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDJyZW07XG4gIGNvbG9yOiAjZDNkM2QzO1xufVxuXG4uZnVsbCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5oYWxmIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNvbG9yOiByZWQ7XG59Il19 */\"","import {Component, ViewEncapsulation, ViewChild, OnInit} from '@angular/core';\nimport {Client} from '../../customer/customer.model';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {CustomerService} from '../../customer/customer.service';\nimport {MenuService} from '../../../theme/components/menu/menu.service';\nimport {Service} from '../../services/service.model';\nimport {MileleService} from '../../services/service.service';\nimport {ngModuleJitUrl} from '@angular/compiler';\nimport {ServiceParam} from '../../shared/models/serviceparam.model';\nimport {Invoice} from '../../shared/models/invoice.model';\nimport {Bookinginvoice} from '../../inventory/purchase/bookinginvoice.model';\nimport {InvoiceService} from '../../invoice/invoice.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-controls',\n    templateUrl: './invoice.component.html',\n    styleUrls: ['./invoice.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [MileleService, CustomerService, InvoiceService]\n})\nexport class InvoiceComponent implements OnInit {\n    public p: any;\n    public type = 'list';\n    public modalRef: NgbModalRef;\n    public frmService: FormGroup;\n    public frmInvoice: FormGroup;\n    public router: Router;\n    // public service: any = {};\n    public params: ServiceParam[];\n    public services: Service[];\n    public invoiceServices: any[] = [];\n    public clients: Client[];\n    serviceName: string;\n    private unitName: string;\n    private total: number;\n    private showInvoice: boolean ;\n    private showList: boolean ;\n    private service: Service;\n\n\n    constructor(public fb: FormBuilder,\n                public toastrService: ToastrService,\n                public membershipService: CustomerService,\n                public mileleService: MileleService,\n                public modalService: NgbModal, public invoiceService: InvoiceService, private activatedRoute: ActivatedRoute, router: Router) {\n        this.router = router;\n    }\n\n\n    ngOnInit() {\n        this.showInvoice = true;\n        this.showList = false;\n        this.getServices();\n        this.getClients();\n        this.params = [\n            {paramId: 1, paramName: 'Quantity'},\n            {paramId: 2, paramName: 'Amount'}\n        ];\n        this.frmInvoice = this.fb.group({\n            clientId: null\n        });\n\n        this.frmService = this.fb.group({\n            service: null,\n            params: null,\n            quantity: null,\n            price: null\n\n        });\n    }\n\n    public getPriceDetails(service): void {\n        if (service) {\n            console.log(service);\n            // this.serviceId = service.id;\n            this.service = service;\n        }\n    }\n\n    public getServices(): void {\n        this.mileleService.getServices().subscribe(services =>\n            this.services = services\n        );\n    }\n\n    public getClients(): void {\n        this.membershipService.getClients().subscribe(clients =>\n            this.clients = clients\n        );\n    }\n\n    // public openModal(modalContent, service) {\n    //     console.log(service);\n    //     if (service) {\n    //         this.service = service;\n    //     } else {\n    //         this.service = new Service();\n    //     }\n    //     this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n    //     this.modalRef.result.then((result) => {\n    //         this.frmService.reset();\n    //     }, (reason) => {\n    //         this.frmService.reset();\n    //     });\n    //     this.showInvoice = false;\n    //     this.showList = true;\n    // }\n\n\n    public openAddServiceModal(modalContent) {\n        // console.log(service);\n        this.service = new Service();\n        this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n        this.modalRef.result.then((result) => {\n            this.frmService.reset({});\n        }, (reason) => {\n           this.frmService.reset({});\n        });\n        // this.showInvoice = true;\n        // this.showList = true;\n    }\n\n    public closeModal() {\n        this.modalRef.close();\n    }\n\n    public onSubmit(srv: Service): void {\n\n        // for (let i = 0; i < this.services.length; i++) {\n        //     if (this.frmService.value.serviceId === this.services[i].id.toString()) {\n        //         this.serviceName = this.services[i].serviceName;\n        //         this.unitName = this.services[i].unitName;\n        //     }\n        // }\n        if (this.frmService.valid) {\n            // console.log('Form is Valid');\n            // console.log(srv);\n            // console.log(srv.serviceId);\n            // console.log(srv.serviceName);\n            let svc = {'serviceId': this.service.id,\n                'serviceName': this.service.serviceName,\n                'unit': this.service.unitName, 'price': this.service.price,\n                'quantity': this.frmService.value.quantity,\n                'totalAmount': this.service.price * this.frmService.value.quantity};\n            this.invoiceServices.push(svc);\n                //this.total += this.frmService.value.price * this.frmService.value.quantity;\n            console.log(this.invoiceServices);\n                this.modalRef.close();\n        }\n    }\n    public onSubmitInvoice(invoice: Invoice): void {\n        this.showInvoice = true;\n        this.showList = false;\n        invoice.invoiceNumber = '#INV';\n        invoice.services = this.invoiceServices;\n        let bookinginvoice = new Bookinginvoice();\n        bookinginvoice.clientId = invoice.clientId;\n        bookinginvoice.invoiceNo = '#INV';\n        bookinginvoice.services = this.invoiceServices;\n        // console.log(invoice);\n        // console.log(bookinginvoice);\n        this.addBookingInvoice(bookinginvoice);\n    }\n\n    public addBookingInvoice(bookinginvoice: Bookinginvoice) {\n        this.invoiceService.addBookingInvoice(bookinginvoice).subscribe(resp => {\n            if (resp) {\n                if (resp.resultCode === '200') {\n                    this.toastrService.info(resp.resultMessage, 'Success');\n                    this.router.navigate(['/invoice']);\n                } else {\n                    this.toastrService.error(resp.resultMessage, 'Error');\n                }\n            }\n        });\n    }\n\n    getSum(): number {\n        let sum = 0;\n        for (let i = 0; i < this.invoiceServices.length; i++) {\n            sum += this.invoiceServices[i].totalAmount;\n        }\n        return sum;\n    }\n}\n\n","export default \".m-img-upload-btn {\\n  position: absolute;\\n  padding: 0;\\n  width: calc(100% - 30px);\\n  height: 38px;\\n  opacity: 0;\\n}\\n\\n.images-container {\\n  width: 100%;\\n  top: 15px;\\n  border: 2px dashed #ccc;\\n  background: #f1f1f1;\\n  min-height: 293px;\\n  padding: 10px;\\n  display: block;\\n}\\n\\n.images-container .m-image-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  margin: 10px;\\n  width: 120px;\\n  height: 120px;\\n}\\n\\n.images-container .m-image-wrapper .m-delete-img {\\n  position: absolute;\\n  top: 8px;\\n  right: 10px;\\n  border: 2px solid #fff;\\n  color: #fff;\\n  padding: 3px 5px;\\n  border-radius: 50%;\\n  visibility: hidden;\\n  cursor: pointer;\\n}\\n\\n.images-container .m-image-wrapper:hover .m-delete-img {\\n  visibility: visible;\\n}\\n\\n.images-container .m-image-wrapper img {\\n  width: 120px;\\n  height: 120px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvbXVsdGlwbGUtaW1hZ2UtdXBsb2FkZXIvQTpcXGkmbV9jb2RlX3Rlc3RcXGNvZGVfdGVzdC9zcmNcXGFwcFxccGFnZXNcXG1vcnR1YXJ5XFxpbnZvaWNlc1xcbXVsdGlwbGUtaW1hZ2UtdXBsb2FkZXJcXG11bHRpcGxlLWltYWdlLXVwbG9hZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9tb3J0dWFyeS9pbnZvaWNlcy9tdWx0aXBsZS1pbWFnZS11cGxvYWRlci9tdWx0aXBsZS1pbWFnZS11cGxvYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLHdCQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7QUNDSjs7QURDQTtFQUNJLFdBQUE7RUFDQSxTQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUNFSjs7QURESTtFQUNJLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUNHUjs7QURGUTtFQUNJLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7RUFDQSxzQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FDSVo7O0FERlE7RUFDSSxtQkFBQTtBQ0laOztBREZRO0VBQ0csWUFBQTtFQUNBLGFBQUE7QUNJWCIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21vcnR1YXJ5L2ludm9pY2VzL211bHRpcGxlLWltYWdlLXVwbG9hZGVyL211bHRpcGxlLWltYWdlLXVwbG9hZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm0taW1nLXVwbG9hZC1idG57XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xuICAgIGhlaWdodDogMzhweDtcbiAgICBvcGFjaXR5OiAwO1xufVxuLmltYWdlcy1jb250YWluZXJ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAxNXB4O1xuICAgIGJvcmRlcjogMnB4IGRhc2hlZCAjY2NjO1xuICAgIGJhY2tncm91bmQ6IHJnYigyNDEsIDI0MSwgMjQxKTtcbiAgICBtaW4taGVpZ2h0OiAyOTNweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIC5tLWltYWdlLXdyYXBwZXJ7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgICAgaGVpZ2h0OiAxMjBweDtcbiAgICAgICAgLm0tZGVsZXRlLWltZ3tcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogOHB4O1xuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgICY6aG92ZXIgLm0tZGVsZXRlLWltZ3tcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICAgIH1cbiAgICAgICAgaW1ne1xuICAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgIGhlaWdodDogMTIwcHg7ICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfSAgIFxufVxuXG4iLCIubS1pbWctdXBsb2FkLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpO1xuICBoZWlnaHQ6IDM4cHg7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5pbWFnZXMtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMTVweDtcbiAgYm9yZGVyOiAycHggZGFzaGVkICNjY2M7XG4gIGJhY2tncm91bmQ6ICNmMWYxZjE7XG4gIG1pbi1oZWlnaHQ6IDI5M3B4O1xuICBwYWRkaW5nOiAxMHB4O1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5pbWFnZXMtY29udGFpbmVyIC5tLWltYWdlLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAxMHB4O1xuICB3aWR0aDogMTIwcHg7XG4gIGhlaWdodDogMTIwcHg7XG59XG4uaW1hZ2VzLWNvbnRhaW5lciAubS1pbWFnZS13cmFwcGVyIC5tLWRlbGV0ZS1pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogOHB4O1xuICByaWdodDogMTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDNweCA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uaW1hZ2VzLWNvbnRhaW5lciAubS1pbWFnZS13cmFwcGVyOmhvdmVyIC5tLWRlbGV0ZS1pbWcge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuLmltYWdlcy1jb250YWluZXIgLm0taW1hZ2Utd3JhcHBlciBpbWcge1xuICB3aWR0aDogMTIwcHg7XG4gIGhlaWdodDogMTIwcHg7XG59Il19 */\"","import { Component, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-multiple-image-uploader',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './multiple-image-uploader.component.html',\n  styleUrls: ['./multiple-image-uploader.component.scss']\n})\nexport class MultipleImageUploaderComponent {\n    public images: string[] = [];\n\n    constructor( private changeDetectorRef: ChangeDetectorRef ) {\n    }\n\n    fileChange(input) {\n        this.readFiles(input.files);\n    }\n\n    readFile(file, reader, callback) {\n        reader.onload = () => {\n            callback(reader.result);\n        };\n        reader.readAsDataURL(file);\n    }\n\n    readFiles(files, index= 0) {\n        const reader = new FileReader();\n\n        if (index in files) {\n            this.readFile(files[index], reader, (result) => {\n                this.images.push(result);\n                this.readFiles(files, index + 1);\n            });\n        } else {\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    removeImage(index): void {\n        this.images.splice(index, 1);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport { InvoiceComponent } from './invoices/invoice.component';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ImageUploaderComponent } from './admission/image-uploader/image-uploader.component';\nimport { MultipleImageUploaderComponent } from './invoices/multiple-image-uploader/multiple-image-uploader.component';\nimport { FridgetrackingComponent } from './fridgetracking/fridgetracking.component';\nimport { AdmissionComponent } from './admission/admission.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PipesModule } from '../../theme/pipes/pipes.module';\n\n\nexport const routes = [\n  { path: '', redirectTo: 'controls', pathMatch: 'full'},\n  { path: 'invoice', component: InvoiceComponent, data: { breadcrumb: 'Invoice' } },\n  { path: 'fridgetracking', component: FridgetrackingComponent, data: { breadcrumb: 'Fridge Tracking' } },\n  { path: 'admission', component: AdmissionComponent, data: { breadcrumb: 'Admission' } }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n      HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MultiselectDropdownModule,\n    NgbModule,\n    CustomFormsModule,\n    NgxChartsModule,\n    CKEditorModule,\n    DirectivesModule,\n      NgxPaginationModule,\n      PipesModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    InvoiceComponent,\n    ImageUploaderComponent,\n    MultipleImageUploaderComponent,\n    FridgetrackingComponent,\n    AdmissionComponent,\n    EditorComponent\n  ]\n})\nexport class MortuaryModule { }\n"],"sourceRoot":"webpack:///","file":"pages-mortuary-mortuary-module-es5.js"}