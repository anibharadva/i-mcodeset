{"version":3,"sources":["src/app/pages/mortuary/invoices/file-uploader/file-uploader.component.html","src/app/pages/transport/bookings/bookings.component.html","src/app/pages/transport/drivers/drivers.component.html","src/app/pages/transport/vehicles/vehicles.component.html","src/app/pages/mortuary/invoices/file-uploader/file-uploader.component.scss","src/app/pages/mortuary/invoices/file-uploader/file-uploader.component.ts","src/app/pages/shared/models/driver.model.ts","src/app/pages/shared/models/vehicle.model.ts","src/app/pages/transport/bookings/booking.model.ts","src/app/pages/transport/bookings/booking.service.ts","src/app/pages/transport/bookings/bookings.component.scss","src/app/pages/transport/bookings/bookings.component.ts","src/app/pages/transport/drivers/drivers.component.scss","src/app/pages/transport/drivers/drivers.component.ts","src/app/pages/transport/drivers/drivers.service.ts","src/app/pages/transport/transport.module.ts","src/app/pages/transport/vehicles/vehicles.component.ts","src/app/pages/transport/vehicles/vehicles.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"form-group\\\">\\n    <div class=\\\"input-group file-upload\\\">\\n        <input type=\\\"file\\\" (change)=\\\"fileChange(input)\\\" #input class=\\\"file-upload-btn\\\"/>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Choose a file...\\\" value=\\\"{{file}}\\\">\\n        <i class=\\\"fa fa-times delete-file\\\" (click)=\\\"removeFile()\\\" *ngIf=\\\"file\\\"></i>\\n        <span class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\"><i class=\\\"fa fa-upload\\\"></i></button>\\n        </span>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row mb-1\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search client by ID Number...\\\"\\n                   class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"openModal(modalContent, null)\\\"\\n                      class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i\\n                        class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"type=='list'\\\" class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>Vehice</th>\\n                    <th>Driver Name</th>\\n                    <th>Date</th>\\n                    <th>Action</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let booking of bookings \\\">\\n                    <td>{{booking.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{booking.vehicleRegNo}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{booking.driverName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{booking.createdOn | date:\\\"dd MMMM, yyyy\\\"}}</td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, booking)\\\"><i\\n                                    class=\\\"fa fa-pencil\\\"></i></button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\">Booking Details</h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmBooking\\\" (ngSubmit)=\\\"onSubmit(frmBooking.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Booking No</label>\\n                                        <input formControlName=\\\"bookingNo\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Booking Date</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\n                                                   formControlName=\\\"bookingDate\\\" ngbDatepicker #p=\\\"ngbDatepicker\\\">\\n                                            <div class=\\\"input-group-append\\\" (click)=\\\"p.toggle()\\\">\\n                                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Client</label>\\n                                        <select formControlName=\\\"clientId\\\" class=\\\"form-control\\\"\\n                                                [ngClass]=\\\"{'form-control-danger' :  frmBooking.get('clientId').hasError('required'), 'form-control-success' :  !frmBooking.get('clientId').hasError('required') }\\\">\\n                                            <option *ngFor=\\\"let client of clients\\\" [selected]=\\\"client.id==client\\\"\\n                                                    [value]=\\\"client.id\\\">{{client.fullName}}\\n                                            </option>\\n                                        </select>\\n                                        <small class=\\\"text-danger\\\"\\n                                               *ngIf=\\\" frmBooking.get('clientId').hasError('required')\\\">Client is\\n                                            required\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Mobile No</label>\\n                                        <input formControlName=\\\"mobileNo\\\" class=\\\"form-control\\\" type=\\\"text\\\"  />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Vehicle</label>\\n                                        <select formControlName=\\\"vehicleId\\\" class=\\\"form-control\\\" required>\\n                                            <option *ngFor=\\\"let vehicle of vehicles\\\"\\n                                                    [selected]=\\\"vehicle.id==booking.vehicle\\\" [value]=\\\"vehicle.id\\\">\\n                                                {{vehicle.vehicleRegNo}}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Driver</label>\\n                                        <select formControlName=\\\"driverId\\\" class=\\\"form-control\\\" required>\\n                                            <option *ngFor=\\\"let driver of drivers\\\"\\n                                                    [selected]=\\\"driver.id==booking.driver\\\" [value]=\\\"driver.id\\\">\\n                                                {{driver.driverName}}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Type Of Day</label>\\n                                        <select formControlName=\\\"dayType\\\" class=\\\"form-control\\\" required>\\n                                            <option *ngFor=\\\"let day of dayTypes\\\"\\n                                                    [selected]=\\\"day.dayType==booking.dayType\\\" [value]=\\\"day.dayType\\\">\\n                                                {{day.dayType}}\\n                                            </option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Approx Milage</label>\\n                                        <input formControlName=\\\"approxMilage\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Pickup Address</label>\\n                                        <input formControlName=\\\"pickupAdd\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Drop-off Address</label>\\n                                        <input formControlName=\\\"dropoffAdd\\\" class=\\\"form-control\\\" type=\\\"text\\\" />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Amount</label>\\n                                        <input formControlName=\\\"amount\\\" class=\\\"form-control\\\" type=\\\"number\\\"  />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Notes</label>\\n<textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"notes\\\"></textarea>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmBooking.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span\\n                                        *ngIf=\\\"!booking.id\\\">Add</span><span *ngIf=\\\"booking.id\\\">Update</span></button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","export default \"<div class=\\\"row mb-1\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search driver by ID Number...\\\" class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"openModal(modalContent, null)\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"type=='list'\\\"  class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>Driver Code</th>\\n                    <th>Driver Name</th>\\n                    <th>Mobile Number</th>\\n                    <th>License Number</th>\\n                    <th>ID Number</th>\\n                    <th>Action</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let driver of drivers \\\">\\n                    <td>{{driver.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{driver.driverCode}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{driver.driverName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{driver.mobileNumber}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{driver.idNumber}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{driver.licenseNumber}}</td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, driver)\\\"><i class=\\\"fa fa-pencil\\\"></i></button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\">Driver Details</h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmDriver\\\" (ngSubmit)=\\\"onSubmit(frmDriver.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Employee Number</label>\\n                                        <input formControlName=\\\"employeeNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Emergency Contact</label>\\n                                        <input formControlName=\\\"emergencyContact\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Driver Code</label>\\n                                        <input formControlName=\\\"driverCode\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Driver Name</label>\\n                                        <input formControlName=\\\"driverName\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">License Number</label>\\n                                        <input formControlName=\\\"licenseNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Id Number</label>\\n                                        <input formControlName=\\\"idNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Issue Date</label>\\n                                        <input formControlName=\\\"issueDate\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Expiry Date</label>\\n                                        <input formControlName=\\\"expiryDate\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Address</label>\\n                                        <input formControlName=\\\"address\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Mobile No</label>\\n                                        <input formControlName=\\\"mobileNumber\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmDriver.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span *ngIf=\\\"!driver.id\\\">Add</span><span *ngIf=\\\"driver.id\\\">Update</span></button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","export default \"<div class=\\\"row mb-1\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search vehicle by Registration Number...\\\" class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"openModal(modalContent, null)\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"type=='list'\\\"  class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>Code</th>\\n                    <th>Make.</th>\\n                    <th>Model.</th>\\n                    <th>Year </th>\\n                    <th>Reg. No.</th>\\n                    <th>Number</th>\\n                    <th>Action</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let vehicle of vehicles \\\">\\n                    <td>{{vehicle.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{vehicle.vehicleCode}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{vehicle.vehicleMake}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{vehicle.model}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{vehicle.manufactureYear}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{vehicle.vehicleRegNo}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{vehicle.chasisNo}}</td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, vehicle)\\\"><i class=\\\"fa fa-pencil\\\"></i></button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\">Vehicle Details</h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmVehicle\\\" (ngSubmit)=\\\"onSubmit(frmVehicle.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Vehicle Code</label>\\n                                        <input formControlName=\\\"vehicleCode\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Vehicle Reg. No</label>\\n                                        <input formControlName=\\\"vehicleRegNo\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Color </label>\\n                                        <input formControlName=\\\"color\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Year of Manufacture</label>\\n                                        <input formControlName=\\\"manufactureYear\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Vehicle Make</label>\\n                                        <input formControlName=\\\"vehicleMake\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Model </label>\\n                                        <input formControlName=\\\"model\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Engine Type</label>\\n                                        <input formControlName=\\\"engineType\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Engine No</label>\\n                                        <input formControlName=\\\"engineNo\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Chasis No</label>\\n                                        <input formControlName=\\\"chasisNo\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Initial Milage</label>\\n                                        <input formControlName=\\\"initialMilage\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmVehicle.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span *ngIf=\\\"!vehicle.id\\\">Add</span><span *ngIf=\\\"vehicle.id\\\">Update</span></button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","export default \".file-upload .file-upload-btn {\\n  position: absolute;\\n  width: 100%;\\n  height: 35px;\\n  z-index: 9;\\n  opacity: 0;\\n}\\n.file-upload .delete-file {\\n  position: absolute;\\n  right: 50px;\\n  top: 8px;\\n  font-size: 16px;\\n  opacity: 0.8;\\n  cursor: pointer;\\n  z-index: 99;\\n  visibility: hidden;\\n}\\n.file-upload:hover .delete-file {\\n  visibility: visible;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvZmlsZS11cGxvYWRlci9BOlxcaSZtX2NvZGVfdGVzdFxcY29kZV90ZXN0L3NyY1xcYXBwXFxwYWdlc1xcbW9ydHVhcnlcXGludm9pY2VzXFxmaWxlLXVwbG9hZGVyXFxmaWxlLXVwbG9hZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9tb3J0dWFyeS9pbnZvaWNlcy9maWxlLXVwbG9hZGVyL2ZpbGUtdXBsb2FkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtFQUNBLFVBQUE7QUNBUjtBREVJO0VBQ0ksa0JBQUE7RUFDQSxXQUFBO0VBQ0EsUUFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQ0FSO0FERUk7RUFDSSxtQkFBQTtBQ0FSIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbW9ydHVhcnkvaW52b2ljZXMvZmlsZS11cGxvYWRlci9maWxlLXVwbG9hZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbGUtdXBsb2Fke1xuICAgIC5maWxlLXVwbG9hZC1idG57XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMzVweDtcbiAgICAgICAgei1pbmRleDogOTtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gICAgLmRlbGV0ZS1maWxle1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiA1MHB4O1xuICAgICAgICB0b3A6IDhweDtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBvcGFjaXR5OiAuODtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB6LWluZGV4OiA5OTtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIH1cbiAgICAmOmhvdmVyIC5kZWxldGUtZmlsZXtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB9XG59XG4iLCIuZmlsZS11cGxvYWQgLmZpbGUtdXBsb2FkLWJ0biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzVweDtcbiAgei1pbmRleDogOTtcbiAgb3BhY2l0eTogMDtcbn1cbi5maWxlLXVwbG9hZCAuZGVsZXRlLWZpbGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiA1MHB4O1xuICB0b3A6IDhweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBvcGFjaXR5OiAwLjg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogOTk7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi5maWxlLXVwbG9hZDpob3ZlciAuZGVsZXRlLWZpbGUge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufSJdfQ== */\"","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-file-uploader',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './file-uploader.component.html',\n  styleUrls: ['./file-uploader.component.scss']\n})\nexport class FileUploaderComponent {\n    public file:any;\n  \n    fileChange(input){\n        const reader = new FileReader();\n        if (input.files.length) {       \n            this.file = input.files[0].name;            \n        }\n    }\n\n    removeFile():void{\n        this.file = '';\n    }\n\n}\n","export class Driver {\n    id: number;\n    driverCode: string;\n    driverName: string;\n    licenseNumber: string;\n    issueDate: string;\n    expiryDate: string;\n    idNumber: string;\n    address: string;\n    mobileNumber: string;\n    emergencyContact: string;\n    driverImage: string;\n    licenseImage: string;\n    constructor() {}\n}\n","export class Vehicle {\n\n    id: number;\n    vehicleCode: string;\n    vechicleRegNo: string;\n    vehicleMake: string;\n    engineType: string;\n    chasisNo: string;\n    engineNo: string;\n    model: string;\n    initialMilage: string;\n    vehicleImage: string;\n    active: boolean;\n    color: string;\n    manufactureYear: string;\n}","export class Booking {\n\n    id: number;\n    vehicleId: number;\n    vehicleRegNo: string;\n    driverId: number;\n    driverName: string;\n    clientId: number;\n    bookingDate: string;\n    bookingNo: string;\n    dayType: string;\n    mobileNo: string;\n    approxMilage: string;\n    pickupAdd: string;\n    dropoffAdd: string;\n    amount: number;\n    notes: string;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Booking} from './booking.model';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable()\nexport class BookingService {\n    constructor(public http: HttpClient) {\n    }\n\n    getBookings(): Observable<Booking[]> {\n        return this.http.get<Booking[]>(environment.BASE_URL + 'transport/vehicle_bookings');\n    }\n\n    addBooking(booking: Booking) {\n        return this.http.post(environment.BASE_URL + 'transport/vehicle_booking/save', booking);\n    }\n}\n","export default \".draggable {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdHJhbnNwb3J0L2Jvb2tpbmdzL0E6XFxpJm1fY29kZV90ZXN0XFxjb2RlX3Rlc3Qvc3JjXFxhcHBcXHBhZ2VzXFx0cmFuc3BvcnRcXGJvb2tpbmdzXFxib29raW5ncy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvdHJhbnNwb3J0L2Jvb2tpbmdzL2Jvb2tpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFFQSxvQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdHJhbnNwb3J0L2Jvb2tpbmdzL2Jvb2tpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRyYWdnYWJsZXtcbiAgICBjdXJzb3I6IG1vdmU7XG4gICAgY3Vyc29yOiBncmFiO1xuICAgIGN1cnNvcjogLW1vei1ncmFiO1xuICAgIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xufSIsIi5kcmFnZ2FibGUge1xuICBjdXJzb3I6IG1vdmU7XG4gIGN1cnNvcjogZ3JhYjtcbiAgY3Vyc29yOiAtbW96LWdyYWI7XG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xufSJdfQ== */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {NgbDateStruct, NgbModal, NgbModalRef, NgbDate} from '@ng-bootstrap/ng-bootstrap';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Booking} from './booking.model';\nimport {Vehicle} from '../../shared/models/vehicle.model';\nimport {Driver} from '../../shared/models/driver.model';\nimport {ToastrService} from 'ngx-toastr';\nimport {CustomerService} from '../../customer/customer.service';\nimport {BookingService} from './booking.service';\nimport {VehiclesService} from '../vehicles/vehicles.service';\nimport {DriversService} from '../drivers/drivers.service';\nimport {Client} from '../../customer/customer.model';\nimport {number} from 'ng2-validation/dist/number';\n\n@Component({\n    selector: 'app-bookings',\n    templateUrl: './bookings.component.html',\n    styleUrls: ['./bookings.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [BookingService, DriversService, VehiclesService, CustomerService]\n})\nexport class BookingsComponent implements OnInit {\n    public bookings: Booking[];\n    public booking: Booking;\n    public vehicles: Vehicle[];\n    public drivers: Driver[];\n    public clients: Client[];\n    public p: any;\n    public type = 'list';\n    public modalRef: NgbModalRef;\n    public frmBooking: FormGroup;\n    year:number;\n\n    // Datepicker in a popup\n    public modelPopup: NgbDateStruct = {year: new Date().getFullYear(), month: new Date().getMonth() + 1, day: new Date().getDate() - 3};\n    private dayTypes: ({ id: number; dayType: string })[];\n   // public modelPopup1: NgbDateStruct = {year: new Date().getFullYear(), month: new Date().getMonth() + 1, day: new Date().getDate() - 3};\n    constructor(public fb: FormBuilder,\n                public toastrService: ToastrService,\n                public bookingService: BookingService,\n                public driversService: DriversService,\n                public vehiclesService: VehiclesService,\n                public clientService: CustomerService,\n                public modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n        this.dayTypes = [\n            {id: 1, dayType: 'WeekDay'},\n            {id: 2, dayType: 'WeekEnd'}\n        ];\n        this.getbookings();\n        this.getClients();\n        this.getDrivers();\n        this.getVehicles();\n        this.frmBooking = this.fb.group({\n            id: null,\n            vehicleId: 0,\n            driverId: 0,\n            clientId: 0,\n            vehicleRegNo: null,\n            driverName: null,\n            createdOn: null,\n            bookingNo: null,\n            bookingDate: null,\n            mobileNo: null,\n            dayType: null,\n            approxMilage: null,\n            pickupAdd: null,\n            dropoffAdd: null,\n            amount: 0,\n            notes: null,\n        });\n    }\n\n    public addBooking(booking: Booking) {\n        this.bookingService.addBooking(booking).subscribe(booking => {\n            this.getbookings();\n        });\n    }\n\n    public getbookings(): void {\n        this.bookingService.getBookings().subscribe(bookings =>\n            this.bookings = bookings\n        );\n    }\n\n    public getDrivers(): void {\n        this.driversService.getDrivers().subscribe(drivers =>\n            this.drivers = drivers\n        );\n    }\n\n    public getVehicles(): void {\n        this.vehiclesService.getVehicles().subscribe(vehicles =>\n            this.vehicles = vehicles\n        );\n    }\n\n    public getClients(): void {\n        this.clientService.getClients().subscribe(clients =>\n            this.clients = clients\n        );\n    }\n\n    public toggle(type) {\n        this.type = type;\n    }\n\n    public openModal(modalContent, booking) {\n        if (booking) {\n            let dt = booking.bookingDate.toLocaleString().split('/');\n\n            //this.year = parseInt(dt[0],10);\n           let newdate = new NgbDate(parseInt(dt[2],10), parseInt(dt[0],10), parseInt(dt[1],10));\n            booking.bookingDate = newdate;\n            this.booking = booking;\n            this.frmBooking.setValue(booking);\n\n        } else {\n            this.booking = new Booking();\n        }\n        this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n        this.modalRef.result.then((result) => {\n            this.frmBooking.reset();\n        }, (reason) => {\n            this.frmBooking.reset();\n        });\n    }\n\n    public closeModal() {\n        this.modalRef.close();\n    }\n\n    public onSubmit(booking: Booking): void {\n        console.log(booking);\n        if (this.frmBooking.valid) {\n            if (booking.id) {\n                // this.updateDriver(driver);\n            } else {\n                let ngbDate = this.frmBooking.controls['bookingDate'].value;\n                let myDate = new Date(ngbDate.year, ngbDate.month-1, ngbDate.day);\n                booking.bookingDate = myDate.toLocaleString().split(',')[0];\n                this.addBooking(booking);\n            }\n            this.modalRef.close();\n        }\n    }\n\n}\n","export default \".resizable-card {\\n  z-index: 9999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdHJhbnNwb3J0L2RyaXZlcnMvQTpcXGkmbV9jb2RlX3Rlc3RcXGNvZGVfdGVzdC9zcmNcXGFwcFxccGFnZXNcXHRyYW5zcG9ydFxcZHJpdmVyc1xcZHJpdmVycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvdHJhbnNwb3J0L2RyaXZlcnMvZHJpdmVycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RyYW5zcG9ydC9kcml2ZXJzL2RyaXZlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVzaXphYmxlLWNhcmR7XG4gICAgei1pbmRleDo5OTk5O1xufSIsIi5yZXNpemFibGUtY2FyZCB7XG4gIHotaW5kZXg6IDk5OTk7XG59Il19 */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {DriversService} from './drivers.service';\nimport {Driver} from '../../shared/models/driver.model';\n\n@Component({\n  selector: 'app-drivers',\n  templateUrl: './drivers.component.html',\n  styleUrls: ['./drivers.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n    providers:[DriversService]\n})\nexport class DriversComponent implements OnInit {\n\n\n    public drivers: Driver[];\n    public driver: Driver;\n    public type = 'list';\n    public p: any;\n    public modalRef: NgbModalRef;\n    public frmDriver: FormGroup;\n    constructor(public fb: FormBuilder,\n                public toastrService: ToastrService,\n                public driversService: DriversService,\n                public modalService: NgbModal) {\n    }\n\n\n    ngOnInit() {\n        this.getDrivers();\n      this.frmDriver = this.fb.group({\n          id: null,\n          driverCode: null,\n          driverName: null,\n          middleName: null,\n          lastName: null,\n          address: null,\n          mobileNumber: null,\n          employeeNumber: null,\n          licenseNumber: ['', Validators.required],\n          issueDate: null,\n          expiryDate: null,\n          driverImage: null,\n          licenseImage: null,\n          emergencyContact: null,\n          dateCreated: null,\n          dateUpdated: null,\n          idNumber: null,\n          active: 0\n      });\n  }\n    public getDrivers(): void {\n        this.driversService.getDrivers().subscribe(drivers =>\n            this.drivers = drivers\n        );\n    }\n\n    public addDriver(driver: Driver) {\n        console.log(driver);\n        this.driversService.addDriver(driver).subscribe(resp => {\n            if (resp) {\n                if (resp.resultCode === '200') {\n                    this.toastrService.info(resp.resultMessage, 'Success');\n                    this.getDrivers();\n                } else {\n                    this.toastrService.error(resp.resultMessage, 'Error');\n                }\n            }\n        });\n    }\n\n    public updateDriver(driver: Driver) {\n        this.driversService.updateDriver(driver).subscribe(resp => {\n            console.log(resp);\n            if (resp) {\n                if (resp.resultCode === '200') {\n                    this.toastrService.info(resp.resultMessage, 'Success');\n                    this.getDrivers();\n                } else {\n                    this.toastrService.error(resp.resultMessage, 'Error');\n                }\n            }\n        });\n    }\n\n    public toggle(type) {\n        this.type = type;\n    }\n\n    public openModal(modalContent, driver) {\n        if (driver) {\n            this.driver = driver;\n\n            this.frmDriver.setValue(driver);\n        } else {\n\n            this.driver = new Driver();\n        }\n        this.modalRef = this.modalService.open(modalContent, {container: '.app', scrollable: true });\n        this.modalRef.result.then((result) => {\n            this.frmDriver.reset();\n        }, (reason) => {\n            this.frmDriver.reset();\n        });\n    }\n\n    public closeModal() {\n        this.modalRef.close();\n    }\n\n    public onSubmit(driver: Driver): void {\n        console.log(driver);\n        if (this.frmDriver.valid) {\n            if (driver.id) {\n                this.updateDriver(driver);\n            } else {\n                this.addDriver(driver);\n            }\n            this.modalRef.close();\n        }\n    }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {environment} from '../../../../environments/environment';\n\nimport {Driver} from '../../shared/models/driver.model';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class DriversService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    getDrivers(): Observable<Driver[]> {\n        return this.http.get<Driver[]>(environment.BASE_URL + 'transport/drivers');\n    }\n\n    addDriver(driver: Driver): Observable<any> {\n        return this.http.post(environment.BASE_URL + 'transport/driver/save', driver);\n    }\n    updateDriver(driver: Driver): Observable<any>  {\n        return this.http.post(environment.BASE_URL  + 'transport/driver/save', driver);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { DragulaModule } from 'ng2-dragula';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DirectivesModule } from '../../theme/directives/directives.module';\nimport {DriversComponent} from './drivers/drivers.component';\nimport {BookingsComponent} from './bookings/bookings.component';\nimport {VehiclesComponent} from './vehicles/vehicles.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {PipesModule} from '../../theme/pipes/pipes.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FileUploaderComponent} from '../mortuary/invoices/file-uploader/file-uploader.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nexport const routes = [\n  { path: '', redirectTo: 'drag-drop', pathMatch: 'full'},\n  { path: 'drivers', component: DriversComponent, data: { breadcrumb: 'Drivers' } },\n  { path: 'vehicles', component: VehiclesComponent, data: { breadcrumb: 'Vehicles' } },\n  { path: 'bookings', component: BookingsComponent, data: { breadcrumb: 'Bookings' } }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n      HttpClientModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    PerfectScrollbarModule,\n    DragulaModule.forRoot(),\n    ResizableModule,\n    DirectivesModule,\n      ReactiveFormsModule,\n      NgxPaginationModule,\n      NgbModule,\n      PipesModule\n  ],\n  declarations: [\n    DriversComponent,\n    VehiclesComponent,\n    BookingsComponent,\n      FileUploaderComponent\n  ]\n})\nexport class TransportModule { }\n","import { Component, OnInit, VERSION, ViewEncapsulation } from '@angular/core';\nimport { ToastrService, GlobalConfig } from 'ngx-toastr';\nimport {Driver} from '../../shared/models/driver.model';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DriversService} from '../drivers/drivers.service';\nimport {Vehicle} from '../../shared/models/vehicle.model';\nimport {VehiclesService} from './vehicles.service';\nconst types = ['success', 'error', 'info', 'warning'];\n\n@Component({\n  selector: 'app-vehicles',\n  templateUrl: './vehicles.component.html',\n  encapsulation: ViewEncapsulation.None,\n    providers:[VehiclesService]\n})\nexport class VehiclesComponent implements OnInit {\n\n\n    public vehicles: Vehicle[];\n    public vehicle: Vehicle;\n    public type = 'list';\n    public p: any;\n    public modalRef: NgbModalRef;\n    public frmVehicle: FormGroup;\n    constructor(public fb: FormBuilder,\n                public toastrService: ToastrService,\n                public vehiclesService: VehiclesService,\n                public modalService: NgbModal) {\n    }\n\n\n    ngOnInit() {\n        this.getVehicles();\n        this.frmVehicle = this.fb.group({\n            id: null,\n            vehicleCode: null,\n            vehicleRegNo: null,\n            engineType: null,\n            vehicleMake: null,\n            chasisNo: null,\n            engineNo: null,\n            model: null,\n            initialMilage: null,\n            category: null,\n            dateCreated: null,\n            dateUpdated: null,\n            active: 0,\n            color: null,\n            manufactureYear: null,\n        });\n    }\n    public getVehicles(): void {\n        this.vehiclesService.getVehicles().subscribe(vehicles =>\n            this.vehicles = vehicles\n        );\n    }\n\n    public addVehicle(vehicle: Vehicle) {\n        this.vehiclesService.addVehicle(vehicle).subscribe(resp => {\n            if (resp) {\n                if (resp.resultCode === '200') {\n                    this.getVehicles();\n                    this.toastrService.info(resp.resultMessage, 'Success');\n                } else {\n                    this.toastrService.error(resp.resultMessage, 'Error');\n                }\n            }\n        });\n    }\n\n    public updateVehicle(vehicle: Vehicle) {\n        this.vehiclesService.updateVehicle(vehicle).subscribe(resp => {\n            if (resp) {\n                if (resp.resultCode === '200') {\n                    this.getVehicles();\n                    this.toastrService.info(resp.resultMessage, 'Success');\n                } else {\n                    this.toastrService.error(resp.resultMessage, 'Error');\n                }\n            }\n        });\n    }\n\n    public toggle(type) {\n        this.type = type;\n    }\n\n    public openModal(modalContent, vehicle) {\n        if (vehicle) {\n            this.vehicle = vehicle;\n\n            this.frmVehicle.setValue(vehicle);\n        } else {\n\n            this.vehicle = new Vehicle();\n        }\n        this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n        this.modalRef.result.then((result) => {\n            this.frmVehicle.reset();\n        }, (reason) => {\n            this.frmVehicle.reset();\n        });\n    }\n\n    public closeModal() {\n        this.modalRef.close();\n    }\n\n    public onSubmit(vehicle: Vehicle): void {\n\n        if (this.frmVehicle.valid) {\n            if (vehicle.id) {\n                this.updateVehicle(vehicle);\n            } else {\n                this.addVehicle(vehicle);\n            }\n            this.modalRef.close();\n        }\n    }\n\n\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {Vehicle} from '../../shared/models/vehicle.model';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable()\nexport class VehiclesService {\n    constructor(public http: HttpClient) {\n    }\n\n    getVehicles(): Observable<Vehicle[]> {\n        return this.http.get<Vehicle[]>(environment.BASE_URL + 'transport/vehicles');\n    }\n\n    addVehicle(vehicle: Vehicle): Observable<any> {\n        return this.http.post(environment.BASE_URL + 'transport/vehicle/save', vehicle);\n    }\n    updateVehicle(vehicle: Vehicle): Observable<any> {\n        return this.http.post(environment.BASE_URL  + 'transport/vehicle/save', vehicle);\n    }\n}\n"],"sourceRoot":"webpack:///","file":"pages-transport-transport-module-es5.js"}