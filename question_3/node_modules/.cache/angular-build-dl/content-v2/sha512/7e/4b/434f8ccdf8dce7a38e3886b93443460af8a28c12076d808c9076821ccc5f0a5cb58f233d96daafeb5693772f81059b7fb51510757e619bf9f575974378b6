{"version":3,"sources":["src/app/pages/invoice/invoice.service.ts","src/app/pages/services/service.model.ts","src/app/pages/services/service.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Invoicemaster} from '../shared/models/invoicemaster';\nimport {Invoiceitemdetails} from '../shared/models/invoiceitemdetails';\nimport {environment} from '../../../environments/environment';\nimport {Bookinginvoice} from '../inventory/purchase/bookinginvoice.model';\n\n@Injectable()\nexport class InvoiceService {\n    constructor(public http: HttpClient) { }\n    getInvoices(): Observable<Invoicemaster[]> {\n        return this.http.get<Invoicemaster[]>(environment.BASE_URL + 'common/invoice/list');\n    }\n\n    getInvoiceItems(id): Observable<Invoiceitemdetails[]> {\n        return this.http.get<Invoiceitemdetails[]>(environment.BASE_URL + 'common/invoice/items/list/?invoiceId=' + id);\n    }\n    addBookingInvoice(bookinginvoice: Bookinginvoice): Observable<any> {\n        return this.http.post(environment.BASE_URL + 'common/invoice/save', bookinginvoice);\n    }\n    getBookingInvoices(): Observable<Bookinginvoice[]> {\n        return this.http.get<Bookinginvoice[]>(environment.BASE_URL + 'inventory/invoices');\n    }\n    handleError(error) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n        } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import {Servicetype} from '../servicetype/servicetype.model';\nimport {Uom} from '../shared/models/uom.model';\nimport {Country} from '../shared/models/country.model';\nimport {County} from '../shared/models/county.model';\nimport {ServiceParam} from '../shared/models/serviceparam.model';\n\n\nexport class Service {\n    id: number;\n    serviceId: string;\n    serviceCode: string;\n    serviceName: string;\n    unit: number;\n    unitName: string;\n    price: number;\n    servicetype: number;\n    dateCreated: string;\n    serviceTypeName: string;\n    status: String;\n    country: number;\n    county: number;\n    params: ServiceParam;\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {Service} from './service.model';\nimport {Uom} from '../shared/models/uom.model';\nimport {catchError} from 'rxjs/operators';\n\nimport {Servicetype} from '../servicetype/servicetype.model';\nimport {environment} from '../../../environments/environment';\n\n\n@Injectable()\nexport class MileleService {\n    constructor(public http: HttpClient) {\n    }\n\n    getServices(): Observable<Service[]> {\n        return this.http.get<Service[]>(environment.BASE_URL + 'common/services');\n    }\n\n    getServiceTypes(): Observable<Servicetype[]> {\n        return this.http.get<Servicetype[]>(environment.BASE_URL + 'common/service_types');\n    }\n    getUoms(): Observable<Uom[]> {\n        return this.http.get<Uom[]>(environment.BASE_URL + 'common/uoms');\n    }\n    addService(service: Service) {\n        return this.http.post(environment.BASE_URL + 'common/service/save', service).pipe(\n            catchError(this.handleError)\n        );\n    }\n    updateService(service: Service) {\n        return this.http.post(environment.BASE_URL  + 'common/service/save', service);\n    }\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('An error occurred:', error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`);\n        }\n        // return an observable with a user-facing error message\n        return throwError(\n            'Something bad happened; please try again later.');\n    }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}