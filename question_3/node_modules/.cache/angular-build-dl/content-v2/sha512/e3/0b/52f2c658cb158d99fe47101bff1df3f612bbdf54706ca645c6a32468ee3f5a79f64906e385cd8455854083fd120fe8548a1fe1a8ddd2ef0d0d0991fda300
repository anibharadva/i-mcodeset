{"version":3,"sources":["./src/app/pages/servicetype/servicetype.component.html","./src/app/pages/servicetype/servicetype.component.ts","./src/app/pages/servicetype/servicetype.model.ts","./src/app/pages/servicetype/servicetype.module.ts","./src/app/pages/servicetype/servicetype.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wqDAAymD,gBAAgB,sEAAsE,6BAA6B,sEAAsE,6BAA6B,sEAAsE,kDAAkD,0gCAA0gC,6BAA6B,quD;;;;;;;;;;;;;;;;;;;;;;ACA16F;AAED;AACD;AACxB;AAGO;AACS;AASzD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAY7B,YAAmB,EAAe,EACf,aAA4B,EAC5B,kBAAsC,EACtC,YAAsB;QAHtB,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAU;QATlC,SAAI,GAAG,MAAM,CAAC;IAUrB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,EAAE,CAAC;QAC1B,oBAAoB;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,EAAE,EAAE,IAAI;YACR,aAAa,EAAE,IAAI;YACnB,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7F,eAAe,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5F,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC;IAEP,CAAC;IAEM,eAAe;QAClB,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAC/D,IAAI,CAAC,YAAY,GAAG,YAAY,CACnC,CAAC;IACN,CAAC;IAGM,cAAc,CAAC,WAAwB;QAC3C,wBAAwB;QACvB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YACxE,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,iBAAiB,CAAC,WAAwB;QAC7C,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;YAC3E,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,IAAI;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,SAAS,CAAC,YAAY,EAAE,WAAW;QACtC,uBAAuB;QACvB,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAC7C;aAAM;YAEH,IAAI,CAAC,WAAW,GAAG,IAAI,8DAAW,EAAE,CAAC;SACxC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,EAAC,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAChC,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACV,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAEM,QAAQ,CAAC,WAAwB;QACpC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC3B,IAAI,WAAW,CAAC,EAAE,EAAE;gBAChB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;aACvC;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;aACpC;YACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;SACzB;IACL,CAAC;CAEJ;;YA5E0B,0DAAW;YACA,wDAAa;YACR,uEAAkB;YACxB,mEAAQ;;AAfhC,oBAAoB;IANhC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,2OAA2C;QAC3C,aAAa,EAAE,+DAAiB,CAAC,IAAI;QACrC,SAAS,EAAE,CAAC,uEAAkB,CAAC;KAClC,CAAC;2EAayB,0DAAW;QACA,wDAAa;QACR,uEAAkB;QACxB,mEAAQ;GAfhC,oBAAoB,CAwFhC;AAxFgC;;;;;;;;;;;;;;;;;ACV1B,MAAM,WAAW;CAQvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfwC;AACM;AACS;AACxD,oEAAoE;AACrB;AACmB;AACX;AACoB;AACtB;AACQ;AACE;AAGxD,MAAM,MAAM,GAAG;IAClB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4EAAoB,EAAE,SAAS,EAAE,MAAM,EAAE;CACnE,CAAC;AAkBF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAI;AAArB,iBAAiB;IAjB7B,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,qEAAgB;YAChB,4DAA4D;YAC5D,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,0DAAW;YACX,kEAAmB;YACnB,oEAAS;YACT,wFAAyB;YACzB,kEAAmB;YACnB,qEAAW;SACd;QACD,YAAY,EAAE;YACV,4EAAoB;SACvB;KACJ,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACjCW;AAC0B;AACvB;AAEF;AAGoB;AAM9D,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAC3B,YAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACnC,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,qEAAW,CAAC,QAAQ,GAAG,sBAAsB,CAAC,CAAC;IACvF,CAAC;IAED,cAAc,CAAC,WAAwB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,GAAG,0BAA0B,EAAE,WAAW,CAAC,CAAC,IAAI,CACtF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;IACN,CAAC;IAED,iBAAiB,CAAC,WAAwB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,GAAG,0BAA0B,EAAE,WAAW,CAAC,CAAC;IAC1F,CAAC;IAEO,WAAW,CAAC,KAAwB;QACxC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5D;aAAM;YACH,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACT,yBAAyB,KAAK,CAAC,MAAM,IAAI;gBACzC,aAAa,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;SACnC;QACD,wDAAwD;QACxD,OAAO,uDAAU,CACb,iDAAiD,CAAC,CAAC;IAC3D,CAAC;CACJ;;YAhC4B,+DAAU;;AAD1B,kBAAkB;IAD9B,gEAAU,EAAE;2EAEgB,+DAAU;GAD1B,kBAAkB,CAiC9B;AAjC8B","file":"pages-servicetype-servicetype-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row mb-1\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search client by ID Number...\\\" class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"openModal(modalContent, null)\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"type=='list'\\\"  class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>Service Type Code</th>\\n                    <th>Service Type Description</th>\\n                    <th>Date</th>\\n                    <th>Action</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let servicetype of servicetypes \\\">\\n                    <td>{{servicetype.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{servicetype.servicetypeCode}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{servicetype.servicetypeName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{servicetype.dateCreated | date:\\\"dd MMMM, yyyy\\\"}}</td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, servicetype)\\\"><i class=\\\"fa fa-pencil\\\"></i></button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\">{{servicetype.servicetypeName}}</h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmServicetype\\\" (ngSubmit)=\\\"onSubmit(frmServicetype.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Service Type Code</label>\\n                                        <input formControlName=\\\"servicetypeCode\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Service Type Description</label>\\n                                        <input formControlName=\\\"servicetypeName\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmServicetype.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span *ngIf=\\\"!service.id\\\">Add</span><span *ngIf=\\\"service.id\\\">Update</span></button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Service} from '../services/service.model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {ToastrService} from 'ngx-toastr';\nimport {Uom} from '../shared/models/uom.model';\n\nimport {Servicetype} from './servicetype.model';\nimport {ServicetypeService} from './servicetype.service';\n\n\n@Component({\n    selector: 'app-servicetype',\n    templateUrl: './servicetype.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [ServicetypeService]\n})\nexport class ServicetypeComponent implements OnInit {\n    public servicetypes: Servicetype[];\n    public servicetype: Servicetype;\n    //public countries: Country[];\n   // public counties: County[];\n    public uoms: Uom[];\n    public type = 'list';\n    public p: any;\n    public modalRef: NgbModalRef;\n\n    public frmServicetype: FormGroup;\n\n    constructor(public fb: FormBuilder,\n                public toastrService: ToastrService,\n                public servicetypeservice: ServicetypeService,\n                public modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n        this.getServiceTypes();\n     //   this.getUoms();\n        this.frmServicetype = this.fb.group({\n            id: null,\n            servicetypeId: null,\n            servicetypeCode: [null, Validators.compose([Validators.required, Validators.maxLength(100)])],\n            servicetypeName: [null, Validators.compose([Validators.required, Validators.maxLength(50)])],\n            dateCreated: null\n        });\n\n    }\n\n    public getServiceTypes(): void {\n        this.servicetypeservice.getServicetypes().subscribe(servicetypes =>\n            this.servicetypes = servicetypes\n        );\n    }\n\n\n    public addServicetype(servicetype: Servicetype) {\n       // console.log(service);\n        this.servicetypeservice.addServicetype(servicetype).subscribe(servicetype => {\n            this.getServiceTypes();\n        });\n    }\n\n    public updateServicetype(servicetype: Servicetype) {\n        this.servicetypeservice.updateServicetype(servicetype).subscribe(servicetype => {\n            this.getServiceTypes();\n        });\n    }\n\n    public toggle(type) {\n        this.type = type;\n    }\n\n    public openModal(modalContent, servicetype) {\n        //console.log(service);\n        if (servicetype) {\n            this.servicetype = servicetype;\n            this.frmServicetype.setValue(servicetype);\n        } else {\n\n            this.servicetype = new Servicetype();\n        }\n        this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n        this.modalRef.result.then((result) => {\n            this.frmServicetype.reset();\n        }, (reason) => {\n            this.frmServicetype.reset();\n        });\n    }\n\n    public closeModal() {\n        this.modalRef.close();\n    }\n\n    public onSubmit(servicetype: Servicetype): void {\n        console.log(servicetype);\n        if (this.frmServicetype.valid) {\n            if (servicetype.id) {\n                this.updateServicetype(servicetype);\n            } else {\n                this.addServicetype(servicetype);\n            }\n            this.modalRef.close();\n        }\n    }\n\n}\n","import {Service} from '../services/service.model';\nimport {Uom} from '../shared/models/uom.model';\nimport {Country} from '../shared/models/country.model';\nimport {County} from '../shared/models/county.model';\nimport {ServiceParam} from '../shared/models/serviceparam.model';\n\n\nexport class Servicetype {\n    id: number;\n    servicetypeId: string;\n    servicetypeCode: string;\n    servicetypeName: string;\n    status: String;\n dateCreated: String;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n// import { InMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PipesModule } from '../../theme/pipes/pipes.module';\nimport { ServicetypeComponent } from './servicetype.component';\n\n\nexport const routes = [\n    { path: '', component: ServicetypeComponent, pathMatch: 'full' }\n];\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        // InMemoryWebApiModule.forRoot(CustomerData, { delay: 0 }),\n        RouterModule.forChild(routes),\n        FormsModule,\n        ReactiveFormsModule,\n        NgbModule,\n        MultiselectDropdownModule,\n        NgxPaginationModule,\n        PipesModule\n    ],\n    declarations: [\n        ServicetypeComponent\n    ]\n})\nexport class ServicetypeModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\n\nimport {catchError} from 'rxjs/operators';\n\n\nimport {environment} from '../../../environments/environment';\nimport {Servicetype} from './servicetype.model';\n\n\n\n@Injectable()\nexport class ServicetypeService {\n    constructor(public http: HttpClient) {\n    }\n\n    getServicetypes(): Observable<Servicetype[]> {\n        return this.http.get<Servicetype[]>(environment.BASE_URL + 'common/service_types');\n    }\n\n    addServicetype(servicetype: Servicetype) {\n        return this.http.post(environment.BASE_URL + 'common/service_type/save', servicetype).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    updateServicetype(servicetype: Servicetype) {\n        return this.http.post(environment.BASE_URL + 'common/service_type/save', servicetype);\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('An error occurred:', error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`);\n        }\n        // return an observable with a user-facing error message\n        return throwError(\n            'Something bad happened; please try again later.');\n    }\n}"],"sourceRoot":"webpack:///"}