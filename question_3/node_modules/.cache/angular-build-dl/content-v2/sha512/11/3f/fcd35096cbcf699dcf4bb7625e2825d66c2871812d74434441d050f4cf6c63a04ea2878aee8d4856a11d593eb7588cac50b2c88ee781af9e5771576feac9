{"version":3,"sources":["./src/app/pages/services/services.component.html","./src/app/pages/customer/customer.service.ts","./src/app/pages/services/services.component.ts","./src/app/pages/services/services.module.ts"],"names":[],"mappings":"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","file":"pages-services-services-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row mb-1\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"input-group mb-3 box-shadow\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search client by ID Number...\\\" class=\\\"form-control border-0\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <span (click)=\\\"openModal(modalContent, null)\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\n                <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-th\\\"></i></span>\\n                <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-list\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *ngIf=\\\"type=='list'\\\"  class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"table-responsive bg-white box-shadow\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <thead>\\n                <tr>\\n                    <th></th>\\n                    <th>Service Code</th>\\n                    <th>Service Description</th>\\n                    <th>Unit</th>\\n                    <th>Price</th>\\n                    <th>Service Type</th>\\n                    <th>Date</th>\\n                    <th>Action</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let service of services \\\">\\n                    <td>{{service.id}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{service.serviceCode}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{service.serviceName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{service.unit}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{service.price}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{service.serviceTypeName}}</td>\\n                    <td class=\\\"align-middle text-truncate\\\">{{service.dateCreated | date:\\\"dd MMMM, yyyy\\\"}}</td>\\n                    <td class=\\\"align-middle\\\">\\n                        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                            <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, service)\\\"><i class=\\\"fa fa-pencil\\\"></i></button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"bg-white text-center\\\">\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #modalContent>\\n    <div class=\\\"modal-body bg-gray\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 mb-0\\\">\\n                <div widget class=\\\"card border-0 box-shadow\\\">\\n                    <div class=\\\"card-header transparent border-0 text-muted\\\">\\n                        <h5 class=\\\"mb-0\\\">{{service.serviceName}}</h5>\\n                    </div>\\n                    <div class=\\\"card-body widget-body\\\">\\n                        <form [formGroup]=\\\"frmService\\\" (ngSubmit)=\\\"onSubmit(frmService.value)\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Service Code</label>\\n                                        <input formControlName=\\\"serviceCode\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Service Description</label>\\n                                        <input formControlName=\\\"serviceName\\\" class=\\\"form-control\\\" type=\\\"text\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-control-label\\\">Service Type</label>\\n                                        <select formControlName=\\\"serviceType\\\" class=\\\"form-control\\\" required>\\n                                            <option *ngFor=\\\"let serviceType of serviceTypes\\\" [selected]=\\\"serviceType.id==service.serviceType\\\" [value]=\\\"serviceType.id\\\">{{serviceType.name}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Unit</label>\\n                                        <select formControlName=\\\"unit\\\" class=\\\"form-control\\\" required>\\n                                            <option *ngFor=\\\"let uom of uoms\\\" [selected]=\\\"uom.id ===service.unitId\\\" [value]=\\\"uom.id\\\">{{uom.name}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray\\\">Price</label>\\n                                        <input formControlName=\\\"price\\\" class=\\\"form-control\\\" type=\\\"number\\\" required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-12 bg-white text-center py-1\\\">\\n                                <button [disabled]=\\\"!frmService.valid\\\" class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\"><span *ngIf=\\\"!service.id\\\">Add</span><span *ngIf=\\\"service.id\\\">Update</span></button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Client, User} from './customer.model';\nimport {Country} from '../shared/models/country.model';\nimport {County} from '../shared/models/county.model';\nimport {environment} from '../../../environments/environment';\nimport {Branch} from '../shared/models/branch.model';\n\n@Injectable()\nexport class CustomerService {\n    constructor(public http: HttpClient) { }\n\n    getClients(): Observable<Client[]> {\n        return this.http.get<Client[]>(environment.BASE_URL + 'client/clients');\n    }\n\n    addClient(client: Client) {\n        return this.http.post(environment.BASE_URL + 'client/registration', client);\n    }\n\n    updateClient(client: Client) {\n        return this.http.post(environment.BASE_URL  + 'client/registration', client);\n    }\n\n    deleteClient(id: number) {\n        return this.http.delete(environment.BASE_URL + '/' + id);\n    }\n    getCountries(): Observable<Country[]> {\n        return this.http.get<Country[]>(environment.BASE_URL + 'common/countries');\n    }\n\n    getCounties(): Observable<County[]> {\n        return this.http.get<County[]>(environment.BASE_URL + 'common/counties');\n    }\n\n    getBranches(): Observable<Branch[]> {\n        return this.http.get<Branch[]>(environment.BASE_URL + 'common/branches/list');\n    }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Service} from '../services/service.model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {MileleService} from './service.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {Uom} from '../shared/models/uom.model';\nimport {CustomerService} from '../customer/customer.service';\nimport {Country} from '../shared/models/country.model';\nimport {County} from '../shared/models/county.model';\nimport {Servicetype} from '../servicetype/servicetype.model';\n\n\n@Component({\n    selector: 'app-services',\n    templateUrl: './services.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [MileleService, CustomerService]\n})\nexport class ServicesComponent implements OnInit {\n    public services: Service[];\n    public service: Service;\n    public countries: Country[];\n    public counties: County[];\n    public uoms: Uom[];\n    public type = 'list';\n    public p: any;\n    public modalRef: NgbModalRef;\n    public servicetypes: Servicetype[];\n\n    public frmService: FormGroup;\n\n    constructor(public fb: FormBuilder,\n                public toastrService: ToastrService,\n                public mileleServices: MileleService,\n                public membershipService: CustomerService,\n                public modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n        this.getServiceTypes();\n        this.getUoms();\n        this.getServices();\n        this.frmService = this.fb.group({\n            id: null,\n            serviceId: null,\n            serviceCode: [null, Validators.compose([Validators.required, Validators.maxLength(100)])],\n            serviceName: [null, Validators.compose([Validators.required, Validators.maxLength(50)])],\n            price: null,\n            unit: null,\n            serviceTypeName: null,\n            serviceType: 0,\n            unitId: 0,\n            quantity: 0,\n            totalAmount: 0\n\n        });\n\n    }\n\n    public getServices(): void {\n        this.mileleServices.getServices().subscribe(services =>\n            this.services = services\n        );\n    }\n\n    public getCountries(): void {\n        this.membershipService.getCountries().subscribe(countries =>\n            this.countries = countries\n        );\n    }\n\n    public getCounties(): void {\n        this.membershipService.getCounties().subscribe(counties =>\n            this.counties = counties\n        );\n    }\n\n    public getServiceTypes(): void {\n        this.mileleServices.getServiceTypes().subscribe(servicetypes =>\n            this.servicetypes = servicetypes\n        );\n    }\n\n    public getUoms(): void {\n        this.mileleServices.getUoms().subscribe(uoms =>\n            this.uoms = uoms\n        );\n    }\n\n    public addService(service: Service) {\n        console.log(service);\n        this.mileleServices.addService(service).subscribe(service => {\n            this.getServices();\n        });\n    }\n\n    public updateService(service: Service) {\n        this.mileleServices.updateService(service).subscribe(service => {\n            this.getServices();\n        });\n    }\n\n    public toggle(type) {\n        this.type = type;\n    }\n\n    public openModal(modalContent, service) {\n        console.log(service);\n        if (service) {\n            this.service = service;\n            this.frmService.setValue(service);\n        } else {\n\n            this.service = new Service();\n        }\n        this.modalRef = this.modalService.open(modalContent, {container: '.app'});\n        this.modalRef.result.then((result) => {\n            this.frmService.reset();\n        }, (reason) => {\n            this.frmService.reset();\n        });\n    }\n\n    public closeModal() {\n        this.modalRef.close();\n    }\n\n    public onSubmit(service: Service): void {\n        console.log(service);\n        if (this.frmService.valid) {\n            if (service.id) {\n                this.updateService(service);\n            } else {\n                this.addService(service);\n            }\n            this.modalRef.close();\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n// import { InMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PipesModule } from '../../theme/pipes/pipes.module';\nimport { ServicesComponent } from './services.component';\n\n\nexport const routes = [\n    { path: '', component: ServicesComponent, pathMatch: 'full' }\n];\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        // InMemoryWebApiModule.forRoot(CustomerData, { delay: 0 }),\n        RouterModule.forChild(routes),\n        FormsModule,\n        ReactiveFormsModule,\n        NgbModule,\n        MultiselectDropdownModule,\n        NgxPaginationModule,\n        PipesModule\n    ],\n    declarations: [\n        ServicesComponent\n    ]\n})\nexport class ServicesModule { }\n"],"sourceRoot":"webpack:///"}